<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>项目搭建能用markdown编辑文章的页面</title>
      <link href="/2025/03/17/%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E8%83%BD%E7%94%A8markdown%E7%BC%96%E8%BE%91%E6%96%87%E7%AB%A0%E7%9A%84%E9%A1%B5%E9%9D%A2/"/>
      <url>/2025/03/17/%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E8%83%BD%E7%94%A8markdown%E7%BC%96%E8%BE%91%E6%96%87%E7%AB%A0%E7%9A%84%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a><strong>安装依赖</strong></h1><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install react-markdown jspdf html2canvas</span><br></pre></td></tr></table></figure><h1 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a><strong>使用组件</strong></h1><h2 id="2-1-以在app-tsx使用为例"><a href="#2-1-以在app-tsx使用为例" class="headerlink" title="2.1 以在app.tsx使用为例"></a>2.1 以在app.tsx使用为例</h2><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MarkdownNotePage</span> <span class="keyword">from</span> <span class="string">&#x27;./MarkdownNotePage&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">App</span>: <span class="title class_">React</span>.<span class="property">FC</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">MarkdownNotePage</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><h2 id="2-2以其他自定义页面为例，如home-tsx页面"><a href="#2-2以其他自定义页面为例，如home-tsx页面" class="headerlink" title="2.2以其他自定义页面为例，如home.tsx页面"></a>2.2以其他自定义页面为例，如home.tsx页面</h2><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState, useRef &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MDEditor</span> <span class="keyword">from</span> <span class="string">&#x27;@uiw/react-md-editor&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTranslation &#125; <span class="keyword">from</span> <span class="string">&#x27;react-i18next&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> html2canvas <span class="keyword">from</span> <span class="string">&#x27;html2canvas&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> jsPDF <span class="keyword">from</span> <span class="string">&#x27;jspdf&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Home</span>: <span class="title class_">React</span>.<span class="property">FC</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; t &#125; = <span class="title function_">useTranslation</span>();</span><br><span class="line">  <span class="keyword">const</span> [value, setValue] = useState&lt;<span class="built_in">string</span>&gt;(<span class="string">&quot;## 开始编写笔记...&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> previewRef = useRef&lt;<span class="title class_">HTMLDivElement</span>&gt;(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">exportToPDF</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (previewRef.<span class="property">current</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> canvas = <span class="keyword">await</span> <span class="title function_">html2canvas</span>(previewRef.<span class="property">current</span>, &#123;</span><br><span class="line">        <span class="attr">scale</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">useCORS</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">logging</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">const</span> imgData = canvas.<span class="title function_">toDataURL</span>(<span class="string">&#x27;image/png&#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> pdf = <span class="keyword">new</span> <span class="title function_">jsPDF</span>(<span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;mm&#x27;</span>, <span class="string">&#x27;a4&#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> imgWidth = <span class="number">190</span>; <span class="comment">// A4纸宽度</span></span><br><span class="line">      <span class="keyword">const</span> imgHeight = (canvas.<span class="property">height</span> * imgWidth) / canvas.<span class="property">width</span>;</span><br><span class="line">      </span><br><span class="line">      pdf.<span class="title function_">addImage</span>(imgData, <span class="string">&#x27;PNG&#x27;</span>, <span class="number">10</span>, <span class="number">10</span>, imgWidth, imgHeight);</span><br><span class="line">      pdf.<span class="title function_">save</span>(<span class="string">&#x27;笔记.pdf&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;p-4 space-y-4&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;flex justify-between items-center&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&quot;text-2xl font-bold&quot;</span>&gt;</span>&#123;t(&#x27;welcome&#x27;)&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;exportToPDF&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">className</span>=<span class="string">&quot;bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          导出PDF</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#123;/* 编辑器 */&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;container mx-auto&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MDEditor</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">value</span>=<span class="string">&#123;value&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onChange</span>=<span class="string">&#123;(val)</span> =&gt;</span> setValue(val || &#x27;&#x27;)&#125;</span></span><br><span class="line"><span class="language-xml">          height=&#123;500&#125;</span></span><br><span class="line"><span class="language-xml">          className=&quot;shadow-lg&quot;</span></span><br><span class="line"><span class="language-xml">        /&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#123;/* 预览 */&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;container mx-auto p-4 border rounded shadow-lg&quot;</span> <span class="attr">ref</span>=<span class="string">&#123;previewRef&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MDEditor.Markdown</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">source</span>=<span class="string">&#123;value&#125;</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">style</span>=<span class="string">&#123;&#123;</span> </span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">whiteSpace:</span> &#x27;<span class="attr">pre-wrap</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">backgroundColor:</span> &#x27;<span class="attr">white</span>&#x27;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">color:</span> &#x27;<span class="attr">black</span>&#x27;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Home</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>react项目语言国际化</title>
      <link href="/2025/03/17/react%E9%A1%B9%E7%9B%AE%E8%AF%AD%E8%A8%80%E5%9B%BD%E9%99%85%E5%8C%96/"/>
      <url>/2025/03/17/react%E9%A1%B9%E7%9B%AE%E8%AF%AD%E8%A8%80%E5%9B%BD%E9%99%85%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h1><p>需要同时安装 <code>i18next</code> 和 <code>react-i18next</code> 依赖：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install react-i18next i18next --save</span><br></pre></td></tr></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><p>在src下新建i18n文件夹，以存放国际化相关配置，i18n中分别新建三个文件夹</p><ul><li><code>config.ts</code>：对 i18n 进行初始化操作及插件配置</li><li><code>en.json</code>：英文语言配置文件</li><li><code>zh.json</code>：中文语言配置文件</li></ul><p><img src="https://i-blog.csdnimg.cn/direct/984dee42bc304c2199635f421a544462.png"></p><h2 id="2-1-config-ts"><a href="#2-1-config-ts" class="headerlink" title="2.1 config.ts"></a><strong>2.1 <code>config.ts</code></strong></h2><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> i18n <span class="keyword">from</span> <span class="string">&#x27;i18next&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; initReactI18next &#125; <span class="keyword">from</span> <span class="string">&#x27;react-i18next&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> translation_en <span class="keyword">from</span> <span class="string">&#x27;./en.json&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> translation_zh <span class="keyword">from</span> <span class="string">&#x27;./zh.json&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取浏览器首选语言</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getLanguageFn</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> navigator.<span class="property">language</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> resources = &#123;</span><br><span class="line">  <span class="attr">en</span>: &#123;</span><br><span class="line">    <span class="attr">translation</span>: translation_en,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">zh</span>: &#123;</span><br><span class="line">    <span class="attr">translation</span>: translation_zh,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 进行初始化</span></span><br><span class="line">i18n.<span class="title function_">use</span>(initReactI18next).<span class="title function_">init</span>(&#123;</span><br><span class="line">  <span class="comment">// 我们自己的语言文件</span></span><br><span class="line">  resources,</span><br><span class="line">  <span class="comment">// 默认语言  zh/en  中文/英文</span></span><br><span class="line">  <span class="attr">lng</span>: <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;language&#x27;</span>) || (<span class="regexp">/cn/i</span>.<span class="title function_">test</span>(<span class="title function_">getLanguageFn</span>()) &amp;&amp; <span class="string">&#x27;zh&#x27;</span>) || <span class="string">&#x27;zh&#x27;</span>,</span><br><span class="line">  <span class="attr">interpolation</span>: &#123;</span><br><span class="line">    <span class="attr">escapeValue</span>: <span class="literal">false</span>, <span class="comment">// 不会为了xss攻击，而把我们的内容强行转成字符串</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;i18n initialized successfully&#x27;</span>);</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;i18n initialization failed:&#x27;</span>, error);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> i18n;</span><br></pre></td></tr></table></figure><h2 id="2-2-zh-json"><a href="#2-2-zh-json" class="headerlink" title="2.2 zh.json"></a>2.2 <code>zh.json</code></h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;language&quot;</span><span class="punctuation">:</span> <span class="string">&quot;语言&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;switch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;选择&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="2-3-en-json"><a href="#2-3-en-json" class="headerlink" title="2.3  en.json"></a>2.3  <code>en.json</code></h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;language&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Language&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;switch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Switch&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h1 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h1><p>在utils文件夹创建contexts文件夹，创建i18nContext.tsx文件，使用Context API来全局使用</p><h2 id="3-1-i18nContext-tsx"><a href="#3-1-i18nContext-tsx" class="headerlink" title="3.1 i18nContext.tsx"></a>3.1 <code>i18nContext.tsx</code></h2><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; createContext, useContext, useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> i18n <span class="keyword">from</span> <span class="string">&#x27;i18next&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义上下文的类型</span></span><br><span class="line"><span class="keyword">interface</span> I18nContextType &#123;</span><br><span class="line">    <span class="attr">currentLanguage</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">changeLanguage</span>: <span class="function">(<span class="params"><span class="attr">lng</span>: <span class="built_in">string</span></span>) =&gt;</span> <span class="built_in">void</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认上下文</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">defaultContext</span>: I18nContextType = &#123;</span><br><span class="line">    <span class="attr">currentLanguage</span>: i18n.<span class="property">language</span>,</span><br><span class="line">    <span class="attr">changeLanguage</span>: <span class="function">() =&gt;</span> &#123;&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建上下文</span></span><br><span class="line"><span class="keyword">const</span> I18nContext = createContext&lt;I18nContextType&gt;(defaultContext);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义自定义 Hook</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useI18n</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> context = <span class="title function_">useContext</span>(I18nContext);</span><br><span class="line">    <span class="keyword">if</span> (!context) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;useI18n must be used within an I18nProvider&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> context;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 I18nProvider 组件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="attr">I18nProvider</span>: <span class="title class_">React</span>.<span class="property">FC</span>&lt;&#123; <span class="attr">children</span>: <span class="title class_">React</span>.<span class="property">ReactNode</span> &#125;&gt; = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 确保 useState 在函数组件顶层调用</span></span><br><span class="line">    <span class="keyword">const</span> [currentLanguage, setCurrentLanguage] = <span class="title function_">useState</span>(i18n.<span class="property">language</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">changeLanguage</span> = (<span class="params"><span class="attr">lng</span>: <span class="built_in">string</span></span>) =&gt; &#123;</span><br><span class="line">        i18n.<span class="title function_">changeLanguage</span>(lng)</span><br><span class="line">          .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">                <span class="title function_">setCurrentLanguage</span>(lng);</span><br><span class="line">                <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;language&#x27;</span>, lng);</span><br><span class="line">            &#125;)</span><br><span class="line">          .<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Failed to change language:&#x27;</span>, error);</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">I18nContext.Provider</span> <span class="attr">value</span>=<span class="string">&#123;&#123;</span> <span class="attr">currentLanguage</span>, <span class="attr">changeLanguage</span> &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;props.children&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">I18nContext.Provider</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="3-2-main-tsx"><a href="#3-2-main-tsx" class="headerlink" title="3.2 main.tsx"></a>3.2 <code>main.tsx</code></h2><p>在项目main.tsx中引用封装好的context</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">StrictMode</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createRoot &#125; <span class="keyword">from</span> <span class="string">&#x27;react-dom/client&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">BrowserRouter</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-router-dom&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;  <span class="title class_">ConfigProvider</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;antd&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; I18nProvider &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/contexts/i18nContext&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./index.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.tsx&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./i18n/config&#x27;</span>; <span class="comment">// 引入 i18n 配置</span></span><br><span class="line"><span class="keyword">const</span> theme = &#123;</span><br><span class="line">  <span class="attr">token</span>: &#123;</span><br><span class="line">    <span class="attr">colorPrimary</span>: <span class="string">&quot;#652FFF&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title function_">createRoot</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)!).<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">BrowserRouter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ConfigProvider</span> <span class="attr">theme</span>=<span class="string">&#123;theme&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">I18nProvider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">I18nProvider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ConfigProvider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">BrowserRouter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">StrictMode</span>&gt;</span></span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="4-1-layout组件使用"><a href="#4-1-layout组件使用" class="headerlink" title="4.1 layout组件使用"></a>4.1 layout组件使用</h2><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; useI18n &#125; <span class="keyword">from</span> <span class="string">&#x27;../../utils/contexts/i18nContext&#x27;</span>;<span class="comment">//引入</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AppLayout</span>: <span class="title class_">React</span>.<span class="property">FC</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">const</span> &#123;  changeLanguage &#125; = <span class="title function_">useI18n</span>();</span><br><span class="line">    <span class="keyword">const</span> [zhMode, setZhMode] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="comment">//exist code</span></span><br><span class="line">  <span class="comment">//创建语言切换函数</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">toggleLangugeMode</span> = (<span class="params"><span class="attr">checked</span>: <span class="built_in">boolean</span></span>) =&gt; &#123;</span><br><span class="line">     <span class="title function_">setZhMode</span>(checked);</span><br><span class="line">      <span class="keyword">if</span> (checked) &#123;</span><br><span class="line">      <span class="title function_">changeLanguage</span>(<span class="string">&#x27;zh&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">   <span class="title function_">changeLanguage</span>(<span class="string">&#x27;en&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//exist code</span></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Layout</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">minHeight:</span> &#x27;<span class="attr">100vh</span>&#x27; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">   //exist code</span></span><br><span class="line"><span class="language-xml">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &#x27;<span class="attr">16px</span>&#x27;, <span class="attr">textAlign:</span> &#x27;<span class="attr">center</span>&#x27;, <span class="attr">display:</span> &#x27;<span class="attr">flex</span>&#x27;, <span class="attr">flexDirection:</span> &#x27;<span class="attr">column</span>&#x27;, <span class="attr">alignItems:</span> &#x27;<span class="attr">center</span>&#x27;,<span class="attr">justifyContent:</span>&#x27;<span class="attr">center</span>&#x27;, <span class="attr">gap:</span> &#x27;<span class="attr">8px</span>&#x27; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        //调用语言切换函数</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Switch</span> <span class="attr">checked</span>=<span class="string">&#123;zhMode&#125;</span> <span class="attr">onChange</span>=<span class="string">&#123;toggleLangugeMode&#125;</span> <span class="attr">checkedChildren</span>=<span class="string">&quot;zh&quot;</span> <span class="attr">unCheckedChildren</span>=<span class="string">&quot;en&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">     //exist code</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Layout</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">AppLayout</span>;</span><br></pre></td></tr></table></figure><h2 id="4-2-在对应页面使用"><a href="#4-2-在对应页面使用" class="headerlink" title="4.2 在对应页面使用"></a>4.2 在对应页面使用</h2><p>以home页面为例</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState, useRef &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTranslation &#125; <span class="keyword">from</span> <span class="string">&#x27;react-i18next&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Home</span>: <span class="title class_">React</span>.<span class="property">FC</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; t &#125; = <span class="title function_">useTranslation</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;p-4 space-y-4&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span> <span class="attr">className</span>=<span class="string">&quot;text-2xl font-bold&quot;</span>&gt;</span>&#123;t(&#x27;welcome&#x27;)&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Home</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> react </category>
          
          <category> 项目配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序原生封装axios以及配置全局http请求</title>
      <link href="/2024/11/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8E%9F%E7%94%9F%E5%B0%81%E8%A3%85axios%E4%BB%A5%E5%8F%8A%E9%85%8D%E7%BD%AE%E5%85%A8%E5%B1%80http%E8%AF%B7%E6%B1%82/"/>
      <url>/2024/11/11/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8E%9F%E7%94%9F%E5%B0%81%E8%A3%85axios%E4%BB%A5%E5%8F%8A%E9%85%8D%E7%BD%AE%E5%85%A8%E5%B1%80http%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<h2 id="1-在utils文件夹里创建一个request-js文件，创建一个request类封装axios并且导出"><a href="#1-在utils文件夹里创建一个request-js文件，创建一个request类封装axios并且导出" class="headerlink" title="1. 在utils文件夹里创建一个request.js文件，创建一个request类封装axios并且导出"></a>1. 在<code>utils</code>文件夹里创建一个<code>request.js</code>文件，创建一个<code>request</code>类封装<code>axios</code>并且导出</h2><pre><code><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">// 封装axios</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">axios</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params">options = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="comment">// 请求的根路径</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">baseUrl</span> = options.<span class="property">baseUrl</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">// 请求的 url 地址</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">url</span> = options.<span class="property">url</span> || <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="comment">// 请求方式</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">method</span> = <span class="string">&#x27;GET&#x27;</span>;</span><br><span class="line">    <span class="comment">// 请求的参数对象</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">data</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// header 请求头</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">header</span> = options.<span class="property">header</span> || &#123;&#125;;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">beforeRequest</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">afterRequest</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">errRequest</span> = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 添加对header的支持</span></span><br><span class="line">  <span class="title function_">_mergeHeaders</span>(<span class="params">customHeader = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;, <span class="variable language_">this</span>.<span class="property">header</span>, customHeader); <span class="comment">// 合并默认header和自定义header</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">get</span>(<span class="params">url, data = &#123;&#125;, header = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="comment">// 清空 header 对象</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">header</span> = &#123;&#125;;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">method</span> = <span class="string">&#x27;GET&#x27;</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">url</span> = <span class="variable language_">this</span>.<span class="property">baseUrl</span> + url;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">data</span> = data;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">header</span> = <span class="variable language_">this</span>.<span class="title function_">_mergeHeaders</span>(header); <span class="comment">// 合并header</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">_sendRequest</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">post</span>(<span class="params">url, data = &#123;&#125;, header = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="comment">// 清空 header 对象</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">header</span> = &#123;&#125;;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">method</span> = <span class="string">&#x27;POST&#x27;</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">url</span> = <span class="variable language_">this</span>.<span class="property">baseUrl</span> + url;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">data</span> = data;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">header</span> = <span class="variable language_">this</span>.<span class="title function_">_mergeHeaders</span>(header); <span class="comment">// 合并header</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">_sendRequest</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">put</span>(<span class="params">url, data = &#123;&#125;, header = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="comment">// 清空 header 对象</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">header</span> = &#123;&#125;;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">method</span> = <span class="string">&#x27;PUT&#x27;</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">url</span> = <span class="variable language_">this</span>.<span class="property">baseUrl</span> + url;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">data</span> = data;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">header</span> = <span class="variable language_">this</span>.<span class="title function_">_mergeHeaders</span>(header); <span class="comment">// 合并header</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">_sendRequest</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">delete</span>(<span class="params">url, data = &#123;&#125;, header = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="comment">// 清空 header 对象</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">header</span> = &#123;&#125;;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">method</span> = <span class="string">&#x27;DELETE&#x27;</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">url</span> = <span class="variable language_">this</span>.<span class="property">baseUrl</span> + url;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">data</span> = data;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">header</span> = <span class="variable language_">this</span>.<span class="title function_">_mergeHeaders</span>(header); <span class="comment">// 合并header</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">_sendRequest</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">_sendRequest</span>(<span class="params">beforeResolve, beforeReject</span>) &#123;</span><br><span class="line">    <span class="comment">// console.log( beforeResolve);</span></span><br><span class="line">    <span class="comment">// 请求之前做一些事</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">beforeRequest</span> &amp;&amp; <span class="keyword">typeof</span> <span class="variable language_">this</span>.<span class="property">beforeRequest</span> === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">beforeRequest</span>(<span class="variable language_">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 发起请求</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// console.log(resolve);</span></span><br><span class="line">      <span class="keyword">if</span>(<span class="title function_">typeof</span>(beforeResolve)!==<span class="string">&#x27;function&#x27;</span>)&#123;</span><br><span class="line">        beforeResolve=resolve</span><br><span class="line">        beforeReject=reject</span><br><span class="line">      &#125;</span><br><span class="line">      wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">url</span>,</span><br><span class="line">        <span class="attr">method</span>: <span class="variable language_">this</span>.<span class="property">method</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">data</span>,</span><br><span class="line">        <span class="attr">header</span>: <span class="variable language_">this</span>.<span class="property">header</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// console.log(res);</span></span><br><span class="line">          <span class="comment">// console.log( beforeResolve);</span></span><br><span class="line">          <span class="keyword">if</span> (res.<span class="property">statusCode</span> === <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="title function_">beforeResolve</span>(res.<span class="property">data</span>);</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span>(res.<span class="property">statusCode</span> === <span class="number">401</span>)&#123;</span><br><span class="line">            <span class="keyword">const</span> config = &#123;</span><br><span class="line">              <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">url</span>,</span><br><span class="line">              <span class="attr">method</span>: <span class="variable language_">this</span>.<span class="property">method</span>,</span><br><span class="line">              <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">data</span>,</span><br><span class="line">              <span class="attr">header</span>: <span class="variable language_">this</span>.<span class="property">header</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            res.<span class="property">config</span> = config;</span><br><span class="line">          &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">const</span> config = &#123;</span><br><span class="line">              <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">url</span>,</span><br><span class="line">              <span class="attr">method</span>: <span class="variable language_">this</span>.<span class="property">method</span>,</span><br><span class="line">              <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">data</span>,</span><br><span class="line">              <span class="attr">header</span>: <span class="variable language_">this</span>.<span class="property">header</span>,</span><br><span class="line">            &#125;;</span><br><span class="line">            res.<span class="property">config</span> = config;</span><br><span class="line">            <span class="title function_">beforeReject</span>(res);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// console.log(err);</span></span><br><span class="line">          <span class="keyword">const</span> config = &#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">url</span>,</span><br><span class="line">            <span class="attr">method</span>: <span class="variable language_">this</span>.<span class="property">method</span>,</span><br><span class="line">            <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">data</span>,</span><br><span class="line">            <span class="attr">header</span>: <span class="variable language_">this</span>.<span class="property">header</span>,</span><br><span class="line">          &#125;;</span><br><span class="line">          err.<span class="property">config</span> = config;</span><br><span class="line">          <span class="title function_">beforeReject</span>(err);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">complete</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 请求完成以后做一些事情</span></span><br><span class="line">          <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">afterRequest</span> &amp;&amp; <span class="keyword">typeof</span> <span class="variable language_">this</span>.<span class="property">afterRequest</span> === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">afterRequest</span>(res, beforeResolve, beforeReject);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// const $http = new axios();</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> axios;</span><br></pre></td></tr></table></figure></code></pre><h2 id="2-在api文件夹里面，创建一个http-js文件，配置好全局的发送http请求"><a href="#2-在api文件夹里面，创建一个http-js文件，配置好全局的发送http请求" class="headerlink" title="2. 在api文件夹里面，创建一个http.js文件，配置好全局的发送http请求"></a>2. 在<code>api</code>文件夹里面，创建一个<code>http.js</code>文件，配置好全局的发送<code>http</code>请求</h2><pre><code>1. 前向拦截器（请求拦截器），在发起请求之前配置好请求头如：放好`token` 2. 后向拦截器（响应拦截器），响应之后要做什么，如token无感刷新，token过期自动调用刷新token接口获取新的token，并且重新发送请求<figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;./axios.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> handleErrors <span class="keyword">from</span> <span class="string">&quot;./handleError.js&quot;</span></span><br><span class="line"><span class="keyword">const</span> $http = <span class="keyword">new</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="attr">baseUrl</span>: <span class="string">&#x27;http://117.72.95.156:6100/api&#x27;</span> <span class="comment">// 设置请求根路径</span></span><br><span class="line">&#125;);</span><br><span class="line">wx.<span class="property">$http</span> = $http; <span class="comment">// 将$http实例挂载到wx对象上，方便全局访问</span></span><br><span class="line"><span class="comment">// 请求开始之前做一些事情</span></span><br><span class="line">$http.<span class="property">beforeRequest</span> = <span class="keyword">function</span>(<span class="params">options</span>) &#123;</span><br><span class="line">  <span class="comment">// 获取存储在本地的token</span></span><br><span class="line">  <span class="keyword">const</span> token = wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;accessToken&#x27;</span>);</span><br><span class="line">  <span class="comment">// 如果token存在，则添加到请求头中</span></span><br><span class="line">  <span class="keyword">if</span> (token) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">header</span>[<span class="string">&#x27;accessToken&#x27;</span>] = <span class="string">`<span class="subst">$&#123;token&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> isRefreshing = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">let</span> requestQueue=[];</span><br><span class="line"><span class="keyword">let</span> refreshCount=<span class="number">0</span></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Max</span>_refresh=<span class="number">10</span>;</span><br><span class="line"><span class="comment">// 请求完成之后做一些事情</span></span><br><span class="line">$http.<span class="property">afterRequest</span> = <span class="keyword">async</span> <span class="keyword">function</span>(<span class="params">res, resolve, reject</span>) &#123;</span><br><span class="line">  <span class="comment">// console.log(&#x27;isRefreshing&#x27;, isRefreshing);</span></span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">statusCode</span> === <span class="number">401</span> &amp;&amp; !isRefreshing&amp;&amp;refreshCount&lt;=<span class="title class_">Max</span>_refresh) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;endRequest&#x27;</span>, res);</span><br><span class="line">    <span class="keyword">const</span> config = res.<span class="property">config</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(resolve);</span><br><span class="line">    requestQueue.<span class="title function_">push</span>(&#123; config, resolve, reject &#125;);</span><br><span class="line">    <span class="comment">// console.log(requestQueue[0]);</span></span><br><span class="line">    <span class="keyword">let</span> refreshToken = wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;refreshToken&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;refreshToken&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(refreshToken);</span><br><span class="line">    <span class="keyword">if</span> (refreshToken === <span class="string">&quot;&quot;</span> || refreshToken === <span class="literal">undefined</span>) &#123;</span><br><span class="line">      <span class="comment">// 处理登录过期逻辑</span></span><br><span class="line">      <span class="title function_">handleLoginExpired</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!isRefreshing) &#123;</span><br><span class="line">      isRefreshing = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> wx.<span class="property">$http</span>.<span class="title function_">get</span>(<span class="string">&#x27;/user/refreshToken&#x27;</span>, &#123;&#125;, &#123; refreshToken &#125;);</span><br><span class="line">        <span class="keyword">if</span>(response.<span class="property">code</span>===<span class="number">1</span>)&#123;</span><br><span class="line">          refreshCount++</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>.<span class="property">accessToken</span>);</span><br><span class="line">          wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;accessToken&#x27;</span>, response.<span class="property">data</span>.<span class="property">accessToken</span>);</span><br><span class="line">          wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;refreshToken&#x27;</span>, response.<span class="property">data</span>.<span class="property">refreshToken</span>);</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">111</span>);</span><br><span class="line">          <span class="comment">// 重试队列中的请求</span></span><br><span class="line">          <span class="title function_">retryQueue</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="title function_">handleLoginExpired</span>() ;</span><br><span class="line">        &#125;</span><br><span class="line">        isRefreshing = <span class="literal">false</span>;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="title function_">handleLoginExpired</span>();</span><br><span class="line">        isRefreshing = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(res.<span class="property">statusCode</span> === <span class="number">401</span>&amp;&amp;refreshCount&gt;<span class="title class_">Max</span>_refresh )&#123;</span><br><span class="line">    <span class="comment">// 如果一直刷新token后，获取到的token万一还是过期的，直接退出登录</span></span><br><span class="line">    <span class="title function_">handleLoginExpired</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 正常处理响应</span></span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">statusCode</span> === <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(res.<span class="property">data</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">handleErrors</span>(res); <span class="comment">// 处理请求错误</span></span><br><span class="line">      <span class="title function_">reject</span>(res);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleLoginExpired</span>(<span class="params"></span>) &#123;</span><br><span class="line">    wx.<span class="title function_">removeStorageSync</span>(<span class="string">&#x27;refreshToken&#x27;</span>);</span><br><span class="line">    wx.<span class="title function_">removeStorageSync</span>(<span class="string">&#x27;accessToken&#x27;</span>);</span><br><span class="line">    refreshCount = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// await wait(500);</span></span><br><span class="line">    wx.<span class="title function_">reLaunch</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;/pages/index/index&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;登录过期&quot;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&quot;error&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">retryQueue</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">while</span> (requestQueue.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// console.log(requestQueue[0]);</span></span><br><span class="line">      <span class="keyword">const</span> &#123; config, resolve, reject &#125; = requestQueue.<span class="title function_">shift</span>();</span><br><span class="line">      <span class="comment">// console.log(config);</span></span><br><span class="line">      <span class="comment">// console.log(resolve);</span></span><br><span class="line">      <span class="title function_">sendBeforeRequest</span>(config, resolve, reject);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">sendBeforeRequest</span>(<span class="params">requestConfig,beforeResolve, beforeReject</span>) &#123;</span><br><span class="line">    <span class="comment">// console.log(beforeResolve);</span></span><br><span class="line">    <span class="title class_">Object</span>.<span class="title function_">assign</span>($http,requestConfig)</span><br><span class="line">    <span class="comment">// console.log($http);</span></span><br><span class="line">    $http.<span class="title function_">_sendRequest</span>(beforeResolve, beforeReject)</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// console.log(response);</span></span><br><span class="line">        <span class="comment">// beforeResolve(response.data);</span></span><br><span class="line">      &#125;)</span><br><span class="line">      .<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// console.log(error);</span></span><br><span class="line">        <span class="comment">// beforeReject(error);</span></span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> $http;</span><br></pre></td></tr></table></figure></code></pre><h2 id="3-在api文件夹里面创建一个api-js文件用来对每个请求进行封装，如："><a href="#3-在api文件夹里面创建一个api-js文件用来对每个请求进行封装，如：" class="headerlink" title="3. 在api文件夹里面创建一个api.js文件用来对每个请求进行封装，如："></a>3. 在<code>api</code>文件夹里面创建一个<code>api.js</code>文件用来对每个请求进行封装，如：</h2><pre><code><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> $http <span class="keyword">from</span> <span class="string">&quot;./http.js&quot;</span></span><br><span class="line"><span class="comment">// 发送浇水命令</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">waterFlower</span>(<span class="params">plantTypeId</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    plantTypeId</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">// return request(&#123;</span></span><br><span class="line">  <span class="comment">//   endpoint: &#x27;/watering&#x27;,</span></span><br><span class="line">  <span class="comment">//   method: &quot;POST&quot;,</span></span><br><span class="line">  <span class="comment">//   data,</span></span><br><span class="line">  <span class="comment">// &#125;);</span></span><br><span class="line">  <span class="keyword">return</span> $http.<span class="title function_">post</span>(<span class="string">&#x27;/watering&#x27;</span>, data);</span><br><span class="line"><span class="comment">//return wx.$http.post(&#x27;/watering&#x27;, data);//或者用wx.$http</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
          <category> 项目配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> 小程序 </tag>
            
            <tag> 封装axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序自定义导航栏和TabBar（用了Tdesign组件库）</title>
      <link href="/2024/11/07/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%92%8CTabBar(%E7%94%A8%E4%BA%86Tdesign%E7%BB%84%E4%BB%B6%E5%BA%93)/"/>
      <url>/2024/11/07/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%92%8CTabBar(%E7%94%A8%E4%BA%86Tdesign%E7%BB%84%E4%BB%B6%E5%BA%93)/</url>
      
        <content type="html"><![CDATA[<h2 id="自定义导航栏"><a href="#自定义导航栏" class="headerlink" title="自定义导航栏"></a>自定义导航栏</h2><ol><li>现在<code>app.json</code> 文件中把导航栏属性改为自定义</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">&quot;window&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;navigationStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;custom&quot;</span></span><br><span class="line"> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><ol start="2"><li>然后再<code>app.js</code>文件中调用<code>wx.getWindowInfo()</code> 接口，全局获取手机顶部状态栏的高度，如果要把高度大小单位换算成rpx，则还需获取屏幕宽度，运用公式进行换算</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="title class_">App</span>(&#123;</span><br><span class="line">  <span class="title function_">onLaunch</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> windowInfo = wx.<span class="title function_">getWindowInfo</span>()</span><br><span class="line">    <span class="keyword">const</span> statusBarHeight=windowInfo.<span class="property">statusBarHeight</span></span><br><span class="line">    <span class="keyword">const</span> screenWidth=windowInfo.<span class="property">screenWidth</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">globalData</span>.<span class="property">navBarHeight</span> = statusBarHeight*<span class="number">750</span>/screenWidth + <span class="number">96</span>;</span><br><span class="line">    <span class="comment">// console.log(statusBarHeight*750/screenWidth + 96);</span></span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">globalData</span>: &#123;</span><br><span class="line">    <span class="attr">navBarHeight</span>: <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里设置自定义导航栏高度为96rpx</p><ol start="3"><li><p>在对应页面的<code>js</code>文件中获取<code>app.js</code>中的全局导航栏+手机状态栏高度大小</p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/home/home.js</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">getApp</span>();</span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">navBarHeight</span>: app.<span class="property">globalData</span>.<span class="property">navBarHeight</span>,</span><br><span class="line">    <span class="attr">tabBarHeight</span>: app.<span class="property">globalData</span>.<span class="property">tabBarHeight</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>在<code>navBar</code>组件的<code>wxml</code>文件中引入自定义导航栏</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">t-navbar</span></span></span><br><span class="line"><span class="tag">  <span class="attr">t-class-placeholder</span>=<span class="string">&quot;t-navbar-placeholder&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">t-class-content</span>=<span class="string">&quot;t-navbar-content&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;custom-navbar&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">title</span>=<span class="string">&quot;标题文字&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line">//页面主要内容margin-top值为app.js中获取到的导航栏加手机状态栏的高度</span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;home&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:&#123;&#123;navBarHeight&#125;&#125;rpx;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>pages/home/home.wxml<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.custom-navbar</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="comment">/* height: 100px !important; */</span></span><br><span class="line">  <span class="attr">--td-navbar-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attr">--td-navbar-bg-color</span>: <span class="number">#0052d9</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="自定义TabBar"><a href="#自定义TabBar" class="headerlink" title="自定义TabBar"></a>自定义<code>TabBar</code></h2><ol><li>现在<code>app.json</code> 文件中把<code>tabBa</code>r属性改为自定义</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="attr">&quot;tabBar&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/home/home&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;首页&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/form/form&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;工单&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><ol start="2"><li>然后再<code>app.js</code>文件中调用<code>wx.getWindowInfo()</code> 接口，全局获取手机顶部状态栏的高度，如果要把高度大小单位换算成rpx，则还需获取屏幕宽度，运用公式进行换算</li></ol><p><img src="https://prod-files-secure.s3.us-west-2.amazonaws.com/0dba967f-2d6c-43ba-b3c3-386e6a153bfa/80e1047f-a362-4028-b8cb-bce7525731fc/image.png" alt="image.png"></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.js</span></span><br><span class="line"><span class="title class_">App</span>(&#123;</span><br><span class="line">  <span class="title function_">onLaunch</span>(<span class="params"></span>) &#123;</span><br><span class="line">     <span class="keyword">const</span> windowInfo = wx.<span class="title function_">getWindowInfo</span>()</span><br><span class="line">    <span class="keyword">const</span> statusBarHeight=windowInfo.<span class="property">statusBarHeight</span></span><br><span class="line">    <span class="keyword">const</span> screenWidth=windowInfo.<span class="property">screenWidth</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">globalData</span>.<span class="property">navBarHeight</span> = statusBarHeight*<span class="number">750</span>/screenWidth + <span class="number">96</span>;</span><br><span class="line">    <span class="comment">// console.log(statusBarHeight*750/screenWidth + 80);</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">globalData</span>.<span class="property">tabBarHeight</span>=statusBarHeight*<span class="number">750</span>/screenWidth + <span class="number">80</span>;</span><br><span class="line">    </span><br><span class="line">  &#125;,</span><br><span class="line">   <span class="attr">globalData</span>: &#123;</span><br><span class="line">    <span class="attr">navBarHeight</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">tabBarHeight</span>:<span class="number">0</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里设置自定义导航栏高度为96rpx</p><ol start="3"><li><p>在对应页面的<code>js</code>文件中获取<code>app.js</code>中的全局导航栏+手机状态栏高度大小</p> <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/home/home.js</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">getApp</span>();</span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 页面的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"> <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">navBarHeight</span>: app.<span class="property">globalData</span>.<span class="property">navBarHeight</span>,</span><br><span class="line">    <span class="attr">tabBarHeight</span>: app.<span class="property">globalData</span>.<span class="property">tabBarHeight</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>在<code>tabBar</code>组件的<code>wxml</code>文件中引入自定义导航栏</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--components/tabBar/tabBar.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">t-tab-bar</span> <span class="attr">t-class</span>=<span class="string">&quot;t-tab-bar&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123;active&#125;&#125;&quot;</span> <span class="attr">bindchange</span>=<span class="string">&quot;onChange&quot;</span> <span class="attr">theme</span>=<span class="string">&quot;tag&quot;</span> <span class="attr">split</span>=<span class="string">&quot;&#123;&#123;false&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;t-tab-bar-item wx:for=&quot;&#123;&#123;list&#125;&#125;&quot; wx:key=&quot;value&quot; value=&quot;&#123;&#123;item.value&#125;&#125;&quot; icon=&quot;&#123;&#123;item.icon&#125;&#125;&quot; &gt;</span></span><br><span class="line"><span class="comment">    &#123;&#123;item.label&#125;&#125;</span></span><br><span class="line"><span class="comment">  &lt;/t-tab-bar-item&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">t-tab-bar-item</span>   <span class="attr">value</span>=<span class="string">&quot;label_1&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;home&quot;</span> <span class="attr">data-key</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    首页</span><br><span class="line">  <span class="tag">&lt;/<span class="name">t-tab-bar-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">t-tab-bar-item</span>   <span class="attr">value</span>=<span class="string">&quot;label_2&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;app&quot;</span> <span class="attr">data-key</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">  工单</span><br><span class="line">  <span class="tag">&lt;/<span class="name">t-tab-bar-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">t-tab-bar</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在tabBar组件的<code>js</code>文件中</p></li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/tabBar/tabBar.js</span></span><br><span class="line"><span class="title class_">Component</span>(&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的属性列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">properties</span>: &#123;</span><br><span class="line">   <span class="attr">active</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>:<span class="title class_">String</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">value</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">list</span>: [</span><br><span class="line">      &#123; <span class="attr">value</span>: <span class="string">&#x27;label_1&#x27;</span>, <span class="attr">label</span>: <span class="string">&#x27;首页&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;home&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">value</span>: <span class="string">&#x27;label_2&#x27;</span>, <span class="attr">label</span>: <span class="string">&#x27;应用&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;app&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">value</span>: <span class="string">&#x27;label_3&#x27;</span>, <span class="attr">label</span>: <span class="string">&#x27;聊天&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;chat&#x27;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">value</span>: <span class="string">&#x27;label_4&#x27;</span>, <span class="attr">label</span>: <span class="string">&#x27;我的&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;user&#x27;</span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的方法列表</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="title function_">onChange</span>(<span class="params">e</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">value</span>: e.<span class="property">detail</span>.<span class="property">value</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">switch</span>(e.<span class="property">detail</span>.<span class="property">value</span>)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;label_1&quot;</span>:</span><br><span class="line">          wx.<span class="title function_">switchTab</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;/pages/home/home&#x27;</span>, &#125;);</span><br><span class="line">          <span class="comment">// console.log(e.detail.value);</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;label_2&#x27;</span>:</span><br><span class="line">          wx.<span class="title function_">switchTab</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;/pages/form/form&#x27;</span>, &#125;);</span><br><span class="line">          <span class="comment">// console.log(e.detail.value);</span></span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 在组件实例进入页面节点树时执行</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">attached</span>(<span class="params"></span>) &#123;</span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="6"><li>在对应页面的wxml文件引入 ，传递状态</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tabBar</span> <span class="attr">active</span>=<span class="string">&quot;label_1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tabBar</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
            <tag> 微信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GSAP时间线Timeline</title>
      <link href="/2024/11/04/GSAP%E6%97%B6%E9%97%B4%E7%BA%BFTimeline/"/>
      <url>/2024/11/04/GSAP%E6%97%B6%E9%97%B4%E7%BA%BFTimeline/</url>
      
        <content type="html"><![CDATA[<h1 id="时间轴"><a href="#时间轴" class="headerlink" title="时间轴"></a>时间轴</h1><p><a href="https://gsap.com/docs/v3/GSAP/Timeline"><strong>时间轴</strong></a>是一种功能强大的排序工具，可充当补间和其他时间轴的容器，从而可以轻松地整体控制它们并精确管理它们的时间。如果没有时间轴，构建复杂的序列会更加麻烦，因为您需要为每个动画使用**<code>delay</code>** 。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// WITHOUT Timelines (only using tweens with delays):</span><br><span class="line">gsap.to(&quot;#id&quot;, &#123; x: 100, duration: 1 &#125;);</span><br><span class="line">gsap.to(&quot;#id&quot;, &#123; y: 50, duration: 1, delay: 1 &#125;);//wait 1 second</span><br><span class="line">gsap.to(&quot;#id&quot;, &#123; opacity: 0, duration: 1, delay: 2 &#125;);//wait 2 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果您想让第一个动画更长怎么办？此后您需要调整<em>每次</em>延迟。如果您想**<code>pause()</code><strong>整个序列或</strong><code>restart()</code><strong>它或</strong><code>reverse()</code>**它即时或重复两次怎么办？这可能会变得相当混乱，但 GSAP 的时间表使其变得异常简单：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//WITH Timelines (cleaner, more versatile)</span><br><span class="line">var tl = gsap.timeline(&#123;repeat: 2, repeatDelay: 1&#125;);</span><br><span class="line">tl.to(&quot;#id&quot;, &#123;x: 100, duration: 1&#125;);</span><br><span class="line">tl.to(&quot;#id&quot;, &#123;y: 50, duration: 1&#125;);</span><br><span class="line">tl.to(&quot;#id&quot;, &#123;opacity: 0, duration: 1&#125;);</span><br><span class="line"></span><br><span class="line">// then we can control the whole thing easily...</span><br><span class="line">tl.pause();</span><br><span class="line">tl.resume();</span><br><span class="line">tl.seek(1.5);</span><br><span class="line">tl.reverse();</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现在我们可以调整时间，而不必担心延迟的影响！增加第一个补间的持续时间，一切都会自动调整。</p><h1 id="在时间轴中定位动画"><a href="#在时间轴中定位动画" class="headerlink" title="在时间轴中定位动画"></a>在<a href="https://gsap.com/docs/v3/GSAP/Timeline#positioning-animations-in-a-timeline"><strong>时间轴</strong></a>中定位动画</h1><p>默认情况下，动画会添加到时间线的<strong>末尾</strong>，以便它们按顺序排列，但您可以使用<a href="https://gsap.com/resources/position-parameter"><strong>位置参数</strong></a>来精确控制事物的放置位置。它通常位于<strong>vars</strong>参数之后，并使用带有以下选项的灵活语法：</p><ul><li>从时间线开始测量的<strong>绝对时间</strong>（以秒为单位），作为<strong>数字，</strong>如**<code>3</code>**</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// insert exactly 3 seconds from the start of the timeline</span><br><span class="line">tl.to(&quot;.class&quot;, &#123; x: 100 &#125;, 3);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>标签</strong>，例如**<code>&quot;someLabel&quot;</code>** 。<em>如果标签不存在，它将被添加到时间线的末尾。</em></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// insert at the &quot;someLabel&quot; label</span><br><span class="line">tl.to(&quot;.class&quot;, &#123; x: 100 &#125;, &quot;someLabel&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong><code>&quot;&lt;&quot;</code><strong>上一个动画的</strong>开始</strong><em>。</em>将**<code>&lt;</code>*<em>视为返回上一个动画开头的指针。</em></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// insert at the START of the  previous animation</span><br><span class="line">tl.to(&quot;.class&quot;, &#123; x: 100 &#125;, &quot;&lt;&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong><code>&quot;&gt;&quot;</code></strong> - 上一个动画的<strong>结束</strong><em>。</em>将**<code>&gt;</code>*<em>视为指向上一个动画结尾的指针。</em></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// insert at the END of the previous animation</span><br><span class="line">tl.to(&quot;.class&quot;, &#123; x: 100 &#125;, &quot;&gt;&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>复杂字符串，其中**<code>&quot;+=&quot;</code><strong>和</strong><code>&quot;-=&quot;</code><strong>前缀表示</strong>相对<strong>值。*当</strong><code>&quot;&lt;&quot;</code><strong>或</strong><code>&quot;&gt;&quot;</code><strong>后面有数字时，它被解释为相对数字，因此</strong><code>&quot;&lt;2&quot;</code><strong>与</strong><code>&quot;&lt;+=2&quot;</code>*<em>相同。</em>示例：<ul><li><strong><code>&quot;+=1&quot;</code></strong> - 时间线结束后 1 秒（创建间隙）</li><li><strong><code>&quot;-=1&quot;</code></strong> - 时间线结束前 1 秒（重叠）</li><li><strong><code>&quot;myLabel+=2&quot;</code></strong> - 标签**<code>&quot;myLabel&quot;</code>**过去 2 秒</li><li><strong><code>&quot;&lt;+=3&quot;</code></strong> - 上一个动画开始后 3 秒</li><li><strong><code>&quot;&lt;3&quot;</code></strong> - 与**<code>&quot;&lt;+=3&quot;</code>**相同（见上文）（ **<code>&quot;+=&quot;</code><strong>在</strong><code>&quot;&lt;&quot;</code><strong>或</strong><code>&quot;&gt;&quot;</code>**后面时隐含）</li><li><strong><code>&quot;&gt;-0.5&quot;</code></strong> - 上一个动画结束前 0.5 秒。就像说<em>“上一个动画的结尾加-0.5”</em></li></ul></li><li>基于<strong>百分比</strong>的复杂字符串。当紧跟在**<code>&quot;+=&quot;</code><strong>或</strong><code>&quot;-=&quot;</code><strong>前缀之后时，百分比基于所</strong>插入动画<strong>的<a href="https://gsap.com/docs/v3/GSAP/Tween/totalDuration()"><strong>总持续时间</strong></a>。当紧跟在</strong><code>&quot;&lt;&quot;</code><strong>或</strong><code>&quot;&gt;&quot;</code><strong>之后时，它基于上</strong>一个动画*<em>的<a href="https://gsap.com/docs/v3/GSAP/Tween/totalDuration()"><strong>总持续时间</strong></a>。</em>注意：总持续时间包括重复&#x2F;溜溜*。示例：<ul><li><strong><code>&quot;-=25%&quot;</code></strong> - 与时间线末尾重叠插入动画总持续时间的 25%</li><li><strong><code>&quot;+=50%&quot;</code></strong> - 超出时间线末尾插入动画总持续时间的 50%，从而创建间隙</li><li><strong><code>&quot;&lt;25%&quot;</code></strong> - 进入上一个动画的 25%（从开始处算起）。与**<code>&quot;&gt;-75%&quot;</code><strong>相同，与上一个动画</strong>结束**时相比负 75%。</li><li><strong><code>&quot;&lt;+=25%&quot;</code></strong> - 上一个动画开始之后插入动画总持续时间的 25%。与**<code>&quot;&lt;25%&quot;</code><strong>不同，“&lt;25%”的百分比基于</strong>前一个动画的<strong>总持续时间，而紧随</strong><code>&quot;+=&quot;</code><strong>或</strong><code>&quot;-=&quot;</code><strong>之后的任何内容都基于</strong>插入动画的**总持续时间。</li><li><strong><code>&quot;myLabel+=30%&quot;</code></strong> - 插入动画总持续时间超过标签**<code>&quot;myLabel&quot;</code>**的 30%。</li></ul></li></ul><h1 id="特殊属性"><a href="#特殊属性" class="headerlink" title="特殊属性"></a>特殊属性</h1><p>以下是一些GSAP时间线的常用特殊属性：</p><ul><li>**<code>repeat</code>**：动画重复的次数。如果设置为 <code>1</code>，则动画会无限重复。</li><li>**<code>repeatDelay</code>**：两次重复之间的间隔时间（以秒为单位）。</li><li>**<code>yoyo</code>**：如果为 <code>true</code>，则每次重复播放都会前后交替进行，使得动画来回运动，类似于溜溜球。</li><li>**<code>delay</code>**：时间轴开始之前的延迟（以秒为单位）。</li><li>**<code>onComplete</code>**：时间线播放完毕后调用的函数。</li><li>**<code>defaults</code>**：可以设置默认值，这样在时间线中创建的每个动画都会继承这些默认值，如 <code>duration</code> 和 <code>ease</code>。</li><li>**<code>onRepeat</code>**：在每次重复时调用的函数。</li><li>**<code>onReverseComplete</code>**：当时间线反向播放完成时调用的函数。</li></ul><h2 id="Getter-Setter-方法"><a href="#Getter-Setter-方法" class="headerlink" title="Getter &#x2F; Setter 方法"></a>Getter &#x2F; Setter 方法</h2><p>时间线提供了一些方法来获取或设置时间线的状态：</p><ul><li>**<code>time()</code>**：播放头的本地位置（当前时间，以秒为单位），不包括任何重复或 <code>repeatDelays</code>。</li><li>**<code>progress()</code>**：介于0和1之间的值，指示播放头的位置，其中0处在开始位置，0.5处在中途完成，1处在结束位置。</li><li>**<code>duration()</code>**：动画的持续时间（以秒为单位），不包括任何重复或 <code>repeatDelays</code>。</li><li>**<code>delay()</code>**：动画的初始延迟（动画开始之前的时间长度，以秒为单位）。</li></ul><h2 id="嵌套时间线"><a href="#嵌套时间线" class="headerlink" title="嵌套时间线"></a>嵌套时间线</h2><p>你可以在时间线中嵌套另一个时间线，这样可以模块化你的代码，使其更易于维护。例如：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> master = gsap.<span class="title function_">timeline</span>();</span><br><span class="line">master.<span class="title function_">add</span>(<span class="title function_">intro</span>()).<span class="title function_">add</span>(<span class="title function_">middle</span>(), <span class="string">&quot;+=2&quot;</span>).<span class="title function_">add</span>(<span class="title function_">conclusion</span>(), <span class="string">&quot;-=1&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="其他时间线特性"><a href="#其他时间线特性" class="headerlink" title="其他时间线特性"></a>其他时间线特性</h2><ul><li>**<code>timeScale()</code>**：可以加速或减慢整个时间线的播放速度。</li><li>**<code>progress()</code> 或 <code>totalProgress()</code>**：获取时间线的进度，<code>totalProgress()</code> 包括任何重复。</li><li>**<code>killTweensOf()</code>**：杀死特定对象内的时间线动画。</li><li>**<code>getTweensOf()</code>**：获取特定对象的动画。</li><li>**<code>getChildren()</code>**：获取时间线中的所有动画和时间线。</li><li><strong><code>currentLabel()</code></strong> 或 <strong><code>nextLabel()</code></strong> 和 **<code>previousLabel()</code>**：获取或查找时间线中特定位置的标签。</li></ul><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> tl = gsap.<span class="title function_">timeline</span>(&#123;</span><br><span class="line">  <span class="attr">repeat</span>: <span class="number">3</span>,</span><br><span class="line">  <span class="attr">repeatDelay</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">onComplete</span>: myFunction</span><br><span class="line">&#125;);</span><br><span class="line">tl.<span class="title function_">to</span>(<span class="string">&quot;.class&quot;</span>, &#123; <span class="attr">duration</span>: <span class="number">1</span>, <span class="attr">x</span>: <span class="number">200</span>, <span class="attr">y</span>: <span class="number">100</span> &#125;);</span><br><span class="line">tl.<span class="title function_">addLabel</span>(<span class="string">&quot;spin&quot;</span>, <span class="number">3</span>);</span><br><span class="line">tl.<span class="title function_">to</span>(<span class="string">&quot;.class&quot;</span>, &#123; <span class="attr">duration</span>: <span class="number">2</span>, <span class="attr">rotation</span>: <span class="string">&quot;+=360&quot;</span> &#125;, <span class="string">&quot;spin&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过这些属性和方法，你可以创建复杂的动画序列，精确控制动画的播放、重复和回调。GSAP的时间线功能非常强大，能够满足大多数复杂的动画需求。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> GSAP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GSAP </tag>
            
            <tag> 动画库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GSAP基础入门</title>
      <link href="/2024/11/04/GSAP%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"/>
      <url>/2024/11/04/GSAP%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="补间动画："><a href="#补间动画：" class="headerlink" title="补间动画："></a><strong>补间动画：</strong></h2><p>这里有四种类型的动画补间：</p><p>• <code>gsap.to()</code>这个是最常见的，指元素从当前状态开始，到定义的状态结束的动画</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">to</span>(<span class="string">&quot;.circle&quot;</span>, &#123; <span class="attr">x</span>: <span class="number">40</span>, <span class="attr">fill</span>: <span class="string">&#x27;blue&#x27;</span>, &#125;)</span><br></pre></td></tr></table></figure><p>• <code>gsap.from()</code>元素从from定义的状态开始移动到当前现有状态结束动画</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">from</span>(<span class="string">&quot;.circle&quot;</span>, &#123; <span class="attr">x</span>: -<span class="number">40</span>, <span class="attr">fill</span>: <span class="string">&#x27;blue&#x27;</span>, &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>• <code>gsap.fromTo()</code>定义起始点状态和终点状态进行动画</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">fromTo</span>( <span class="string">&quot;.circle&quot;</span>,&#123; <span class="attr">x</span>: -<span class="number">40</span>, <span class="attr">fill</span>: <span class="string">&#x27;blue&#x27;</span>, &#125;, &#123; <span class="attr">x</span>: <span class="number">40</span>, <span class="attr">fill</span>: <span class="string">&#x27;green&#x27;</span> &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>• <code>gsap.set()</code>直接跳转到set的状态，无动画化</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">set</span>(<span class="string">&quot;.circle&quot;</span>, &#123; <span class="attr">x</span>: <span class="number">40</span>, <span class="attr">fill</span>: <span class="string">&#x27;blue&#x27;</span>, &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="目标元素获取："><a href="#目标元素获取：" class="headerlink" title="目标元素获取："></a><strong>目标元素获取：</strong></h2><p>target可以使用选择器或者获取的<a href="https://so.csdn.net/so/search?q=dom&spm=1001.2101.3001.7020">dom</a>元素，甚至一个包含多个dom元素数组</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">to</span>(<span class="string">&quot;.box&quot;</span>,&#123;<span class="attr">x</span>:<span class="number">20</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> box = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.box&quot;</span>);</span><br><span class="line">gsap.<span class="title function_">to</span>(box,&#123;<span class="attr">x</span>:<span class="number">20</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> box1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.box1&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> box2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.box2&quot;</span>);</span><br><span class="line">gsap.<span class="title function_">to</span>([box1,box2],&#123;<span class="attr">x</span>:<span class="number">200</span>&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="变量参数："><a href="#变量参数：" class="headerlink" title="变量参数："></a><strong>变量参数：</strong></h2><p>变量参数可以是影响动画的任意属性或者特殊行为，例如duration\onComplete\repeat</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gsap.<span class="title function_">to</span>(target, &#123;</span><br><span class="line">  <span class="comment">// this is the vars object</span></span><br><span class="line">  <span class="comment">// it contains properties to animate</span></span><br><span class="line">  <span class="attr">x</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="attr">rotation</span>: <span class="number">360</span>,</span><br><span class="line">  <span class="comment">// and special properties</span></span><br><span class="line">  <span class="attr">duration</span>: <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>gsap可以改变几乎所有的动画有关的属性，包括css属性，自定义的对象的属性，甚至css变量和复杂的字符串</p><p>这里是一张GSAP属性和css动画属性对应的表</p><table><thead><tr><th>GSAP变量参数</th><th>等于css属性</th></tr></thead><tbody><tr><td>x: 100</td><td>transform: translateX(100px)</td></tr><tr><td>y: 100</td><td>transform: translateY(100px)</td></tr><tr><td>xPercent: 50</td><td>transform: translateX(50%)</td></tr><tr><td>yPercent: 50</td><td>transform: translateY(50%)</td></tr><tr><td>scale: 2</td><td>transform: scale(2)</td></tr><tr><td>scaleX: 2</td><td>transform: scaleX(2)</td></tr><tr><td>scaleY: 2</td><td>transform: scaleY(2)</td></tr><tr><td>rotation: 90</td><td>transform: rotate(90deg)</td></tr><tr><td>rotation: “1.25rad”</td><td>这里使用弧度则没有对应的css</td></tr><tr><td>skew: 30</td><td>transform: skew(30deg)</td></tr><tr><td>skewX: 30</td><td>transform: skewX(30deg)</td></tr><tr><td>skewY: “1.23rad”</td><td>这里使用弧度则没有对应的css</td></tr><tr><td>transformOrigin: “center 40%”</td><td>transform-origin: center 40%</td></tr><tr><td>opacity: 0</td><td>adjust the elements opacity</td></tr><tr><td>autoAlpha: 0</td><td>不透明度和可见性的简写</td></tr><tr><td>duration: 1</td><td>animation-duration: 1s</td></tr><tr><td><strong>repeat: -1</strong></td><td>animation-iteration-count: infinite 重复无限次</td></tr><tr><td>repeat: 2</td><td>animation-iteration-count: 2</td></tr><tr><td>delay: 2</td><td>animation-delay: 2</td></tr><tr><td>yoyo: true 来回往复动画</td><td>animation-direction: alternate</td></tr></tbody></table><h2 id="单位"><a href="#单位" class="headerlink" title="单位"></a><strong>单位</strong></h2><p>GSAP默认单位是px和deg，可以使用字符串形式设定自己想要的单位，甚至相对计算</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">x</span>: <span class="number">200</span>, <span class="comment">// 默认px</span></span><br><span class="line"><span class="attr">x</span>: <span class="string">&quot;+=200&quot;</span> <span class="comment">// 相对计算</span></span><br><span class="line"><span class="attr">x</span>: <span class="string">&#x27;40vw&#x27;</span>, <span class="comment">// 字符串</span></span><br><span class="line"><span class="attr">x</span>: <span class="function">() =&gt;</span> <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="number">2</span>, <span class="comment">//用函数值计算</span></span><br><span class="line"><span class="attr">rotation</span>: <span class="number">360</span> <span class="comment">// 默认deg</span></span><br><span class="line"><span class="attr">rotation</span>: <span class="string">&quot;1.25rad&quot;</span> <span class="comment">// 使用弧度单位rad</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> GSAP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GSAP </tag>
            
            <tag> 动画库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序项目配置---全局websocket</title>
      <link href="/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE---%E5%85%A8%E5%B1%80websocket/"/>
      <url>/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE---%E5%85%A8%E5%B1%80websocket/</url>
      
        <content type="html"><![CDATA[<h1 id="全局websocket（微信小程序）"><a href="#全局websocket（微信小程序）" class="headerlink" title="全局websocket（微信小程序）"></a>全局websocket（微信小程序）</h1><p>以下是对小程序项目进行全局websocket配置</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//websocket.js</span></span><br><span class="line"><span class="keyword">let</span> socket = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">const</span> listeners = [];</span><br><span class="line"><span class="keyword">let</span> heartbeatInterval = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">HEARTBEAT_INTERVAL</span> = <span class="number">10000</span>; <span class="comment">// 10秒心跳间隔</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">WEB_SOCKET_URL</span> = <span class="string">&#x27;ws://117.72.95.156:8080/ws&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">connectWebSocket</span>(<span class="params">url</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span>(socket&amp;&amp; socket.<span class="property">readyState</span> === <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;WebSocket已连接,无需重连&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> connectUrl=<span class="string">`<span class="subst">$&#123;WEB_SOCKET_URL&#125;</span>/<span class="subst">$&#123;url&#125;</span>`</span></span><br><span class="line">  socket = wx.<span class="title function_">connectSocket</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: connectUrl <span class="comment">// 确保这里是 url: connectUrl</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">if</span>(socket)&#123;</span><br><span class="line">    socket.<span class="title function_">onOpen</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;WebSocket连接已打开&#x27;</span>);</span><br><span class="line">      <span class="title function_">startHeartbeat</span>(); <span class="comment">// 连接成功后启动心跳</span></span><br><span class="line">    &#125;);</span><br><span class="line">  </span><br><span class="line">    socket.<span class="title function_">onMessage</span>(<span class="function">(<span class="params">message</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// console.log(&#x27;收到原始消息:&#x27;, message);</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 确保消息是字符串格式</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> message.<span class="property">data</span> === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">          <span class="keyword">const</span> parsedData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(message.<span class="property">data</span>);</span><br><span class="line">          <span class="keyword">if</span>(parsedData.<span class="property">event</span>===<span class="string">&#x27;heartbeat&#x27;</span>)&#123;</span><br><span class="line">            <span class="comment">// console.log(&quot;收到心跳消息&quot;);</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// 处理解析后的数据</span></span><br><span class="line">          listeners.<span class="title function_">forEach</span>(<span class="function"><span class="params">listener</span> =&gt;</span> <span class="title function_">listener</span>(parsedData));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;接收到的消息不是字符串格式&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 重置心跳</span></span><br><span class="line">        <span class="title function_">resetHeartbeat</span>();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="comment">// console.error(&#x27;JSON parsing error:&#x27;, error);</span></span><br><span class="line">        <span class="comment">// 处理解析错误</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  </span><br><span class="line">    socket.<span class="title function_">onError</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;WebSocket错误:&#x27;</span>, error);</span><br><span class="line">      <span class="comment">// 可能需要通知用户连接错误</span></span><br><span class="line">      wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">        <span class="attr">title</span>: <span class="string">&#x27;WebSocket连接失败&#x27;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">        <span class="attr">duration</span>: <span class="number">2000</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  </span><br><span class="line">    socket.<span class="title function_">onClose</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;WebSocket连接已关闭&#x27;</span>);</span><br><span class="line">      <span class="title function_">stopHeartbeat</span>(); <span class="comment">// 关闭时停止心跳</span></span><br><span class="line">      <span class="comment">// 可能需要重新连接或通知用户</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">disconnectWebSocket</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (socket) &#123;</span><br><span class="line">    socket.<span class="title function_">close</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;WebSocket连接已断开&#x27;</span>);</span><br><span class="line">    <span class="title function_">stopHeartbeat</span>(); <span class="comment">// 停止心跳</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sendMessage</span>(<span class="params">msg</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (socket &amp;&amp; socket.<span class="property">readyState</span> === <span class="number">1</span>) &#123;</span><br><span class="line">    socket.<span class="title function_">send</span>(&#123; <span class="attr">data</span>: msg &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;WebSocket未连接&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">registerMessageListener</span>(<span class="params">listener</span>) &#123;</span><br><span class="line">  listeners.<span class="title function_">push</span>(listener);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">unregisterMessageListener</span>(<span class="params">listener</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> index = listeners.<span class="title function_">indexOf</span>(listener);</span><br><span class="line">  <span class="keyword">if</span> (index &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">    listeners.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">startHeartbeat</span>(<span class="params"></span>) &#123;</span><br><span class="line">  heartbeatInterval = <span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">sendMessage</span>(<span class="string">&#x27;ping&#x27;</span>); <span class="comment">// 发送心跳消息</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;发送心跳: ping&#x27;</span>);</span><br><span class="line">  &#125;, <span class="variable constant_">HEARTBEAT_INTERVAL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">resetHeartbeat</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (heartbeatInterval) &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(heartbeatInterval); <span class="comment">// 清除当前心跳定时器</span></span><br><span class="line">    <span class="title function_">startHeartbeat</span>(); <span class="comment">// 重新启动心跳</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">stopHeartbeat</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (heartbeatInterval) &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(heartbeatInterval); <span class="comment">// 停止心跳</span></span><br><span class="line">    heartbeatInterval = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; connectWebSocket, sendMessage, registerMessageListener,unregisterMessageListener, disconnectWebSocket &#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
          <category> 项目配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序项目配置---全局request及错误处理(简易)</title>
      <link href="/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE---%E5%85%A8%E5%B1%80request%E5%8F%8A%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86(%E7%AE%80%E6%98%93)/"/>
      <url>/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE---%E5%85%A8%E5%B1%80request%E5%8F%8A%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86(%E7%AE%80%E6%98%93)/</url>
      
        <content type="html"><![CDATA[<h1 id="全局request及错误处理"><a href="#全局request及错误处理" class="headerlink" title="全局request及错误处理"></a>全局request及错误处理</h1><p>以下是对小程序项目进行全局request及错误处理</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// request.js</span></span><br><span class="line"><span class="keyword">import</span> handleErrors <span class="keyword">from</span> <span class="string">&#x27;./handleErrors&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> baseURL = <span class="string">&#x27;http://117.72.95.156:8080/api&#x27;</span>; <span class="comment">// 基础 URL</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">request</span> = (<span class="params">options</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// console.log(options);</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 请求拦截器</span></span><br><span class="line">    <span class="keyword">const</span> token = wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;token&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (token) &#123;</span><br><span class="line">      options.<span class="property">header</span> = &#123;</span><br><span class="line">        ...options.<span class="property">header</span>,</span><br><span class="line">        <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span>,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置完整的 URL</span></span><br><span class="line">    <span class="comment">// options.url = baseURL + (endpoints[options.endpoint] || options.endpoint);</span></span><br><span class="line">    options.<span class="property">url</span> = baseURL + options.<span class="property">endpoint</span>;</span><br><span class="line">    options.<span class="property">timeout</span>=options.<span class="property">timeout</span>||<span class="number">5000</span>;</span><br><span class="line">    wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">      ...options,</span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 响应拦截器</span></span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">statusCode</span> === <span class="number">200</span>) &#123;</span><br><span class="line">          <span class="title function_">resolve</span>(res.<span class="property">data</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="title function_">handleErrors</span>(res); <span class="comment">// 处理错误</span></span><br><span class="line">          <span class="title function_">reject</span>(res);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">fail</span>: <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">handleErrors</span>(error); <span class="comment">// 处理请求错误</span></span><br><span class="line">        <span class="title function_">reject</span>(error);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  request,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// handleErrors.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Notify</span> <span class="keyword">from</span> <span class="string">&#x27;../miniprogram_npm/@vant/weapp/notify/notify&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleErrors</span> = (<span class="params">error</span>) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">  <span class="keyword">if</span> (error.<span class="property">data</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; status &#125; = error.<span class="property">data</span>;</span><br><span class="line">    <span class="comment">// console.log(status);</span></span><br><span class="line">    <span class="keyword">switch</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">      <span class="keyword">case</span> status &gt;= <span class="number">500</span> &amp;&amp; status &lt; <span class="number">600</span>:</span><br><span class="line">        <span class="title class_">Notify</span>(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">          <span class="attr">message</span>:<span class="string">`服务器错误: <span class="subst">$&#123;status&#125;</span>`</span>,</span><br><span class="line">          <span class="attr">duration</span>: <span class="number">2000</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// wx.showToast(&#123;</span></span><br><span class="line">        <span class="comment">//   title: `服务器错误: $&#123;status&#125;`,</span></span><br><span class="line">        <span class="comment">//   icon: &#x27;error&#x27;,</span></span><br><span class="line">        <span class="comment">//   duration: 2000</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> status === <span class="number">403</span>:</span><br><span class="line">        <span class="title class_">Notify</span>(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">          <span class="attr">message</span>:<span class="string">&quot;禁止访问: 403 Forbidden&quot;</span>,</span><br><span class="line">          <span class="attr">duration</span>: <span class="number">2000</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// wx.showToast(&#123;</span></span><br><span class="line">        <span class="comment">//   title: &quot;禁止访问: 403 Forbidden&quot;,</span></span><br><span class="line">        <span class="comment">//   icon: &#x27;error&#x27;,</span></span><br><span class="line">        <span class="comment">//   duration: 2000</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> status === <span class="number">404</span>:</span><br><span class="line">        <span class="title class_">Notify</span>(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">          <span class="attr">message</span>:<span class="string">&quot;未找到: 404 Not Found&quot;</span>,</span><br><span class="line">          <span class="attr">duration</span>: <span class="number">2000</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// wx.showToast(&#123;</span></span><br><span class="line">        <span class="comment">//   title: &quot;未找到: 404 Not Found&quot;,</span></span><br><span class="line">        <span class="comment">//   icon: &#x27;error&#x27;,</span></span><br><span class="line">        <span class="comment">//   duration: 2000</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        <span class="title class_">Notify</span>(&#123;</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">          <span class="attr">message</span>: <span class="string">`错误状态码: <span class="subst">$&#123;status&#125;</span>`</span>,</span><br><span class="line">          <span class="attr">duration</span>: <span class="number">2000</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// wx.showToast(&#123;</span></span><br><span class="line">        <span class="comment">//   title: `错误状态码: $&#123;status&#125;`,</span></span><br><span class="line">        <span class="comment">//   icon: &#x27;error&#x27;,</span></span><br><span class="line">        <span class="comment">//   duration: 2000</span></span><br><span class="line">        <span class="comment">// &#125;)</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error.<span class="property">request</span>) &#123;</span><br><span class="line">    <span class="title class_">Notify</span>(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&quot;请求发出, 网络错误&quot;</span>,</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">2000</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// wx.showToast(&#123;</span></span><br><span class="line">    <span class="comment">//   title: &quot;请求发出, 网络错误&quot;,</span></span><br><span class="line">    <span class="comment">//   icon: &#x27;error&#x27;,</span></span><br><span class="line">    <span class="comment">//   duration: 2000</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title class_">Notify</span>(&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&quot;请求错误: &quot;</span> + error.<span class="property">errMsg</span>,</span><br><span class="line">      <span class="attr">duration</span>: <span class="number">2000</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// wx.showToast(&#123;</span></span><br><span class="line">    <span class="comment">//   title: &quot;请求错误: &quot; + error.errMsg,</span></span><br><span class="line">    <span class="comment">//   icon: &#x27;error&#x27;,</span></span><br><span class="line">    <span class="comment">//   duration: 2000</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> handleErrors;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
          <category> 项目配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>react项目配置---全局axios及错误处理</title>
      <link href="/2024/10/30/react%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE---%E5%85%A8%E5%B1%80axios%E5%8F%8A%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/"/>
      <url>/2024/10/30/react%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE---%E5%85%A8%E5%B1%80axios%E5%8F%8A%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="全局axios及错误处理（react）"><a href="#全局axios及错误处理（react）" class="headerlink" title="全局axios及错误处理（react）"></a>全局axios及错误处理（react）</h1><p>以下是对项目进行全局axios配置及错误处理，以react为例</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//src/utils/axios.js</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> handleErrors <span class="keyword">from</span> <span class="string">&quot;./handleError&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个axios实例</span></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: process.<span class="property">env</span>.<span class="property">REACT_APP_API_URL</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">responseType</span>: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//在请求前做些什么</span></span><br><span class="line">    <span class="keyword">const</span> token = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (token) &#123;</span><br><span class="line">      config.<span class="property">headers</span>[<span class="string">&quot;Authorization&quot;</span>] = <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//对请求错误做些什么</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">//响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//对响应数据做些什么</span></span><br><span class="line">    <span class="keyword">return</span> response.<span class="property">data</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//对响应错误做些什么</span></span><br><span class="line">    <span class="title function_">handleErrors</span>(error); <span class="comment">// 使用普通函数处理错误</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/utils/handleError.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; message &#125; <span class="keyword">from</span> <span class="string">&quot;antd&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">handleErrors</span> = (<span class="params">error</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (error.<span class="property">response</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; status &#125; = error.<span class="property">response</span>;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">      <span class="keyword">case</span> status &gt;= <span class="number">200</span> &amp;&amp; status &lt; <span class="number">300</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> status &gt;= <span class="number">500</span> &amp;&amp; status &lt; <span class="number">600</span>:</span><br><span class="line">        message.<span class="title function_">error</span>(<span class="string">`服务器错误: <span class="subst">$&#123;status&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> status === <span class="number">403</span>:</span><br><span class="line">        message.<span class="title function_">error</span>(<span class="string">&quot;禁止访问: 403 Forbidden&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> status === <span class="number">404</span>:</span><br><span class="line">        message.<span class="title function_">error</span>(<span class="string">&quot;未找到: 404 Not Found&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        message.<span class="title function_">error</span>(<span class="string">`错误状态码: <span class="subst">$&#123;status&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error.<span class="property">request</span>) &#123;</span><br><span class="line">    message.<span class="title function_">error</span>(<span class="string">&quot;请求发出, 网络错误&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    message.<span class="title function_">error</span>(<span class="string">&quot;请求错误: &quot;</span> + error.<span class="property">message</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> handleErrors;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> react </category>
          
          <category> 项目配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序中的behaviors</title>
      <link href="/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84behaviors/"/>
      <url>/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E7%9A%84behaviors/</url>
      
        <content type="html"><![CDATA[<h1 id="behaviors"><a href="#behaviors" class="headerlink" title="behaviors"></a><strong>behaviors</strong></h1><p>在微信小程序开发中，<code>behaviors</code> 是一种类似于 <strong>“组件继承”</strong> 的机制，允许将公共的代码（如数据、方法、生命周期函数等）抽离到一个单独的模块，然后让多个组件或页面去复用这些代码。<code>behaviors</code> 类似于 React 中的 **<code>mixins</code>**，用于代码的复用和模块化。</p><h3 id="1-behaviors-的基本使用"><a href="#1-behaviors-的基本使用" class="headerlink" title="1. behaviors 的基本使用"></a><strong>1. <code>behaviors</code> 的基本使用</strong></h3><h3 id="定义-behavior"><a href="#定义-behavior" class="headerlink" title="定义 behavior"></a><strong>定义 <code>behavior</code></strong></h3><p>可以通过 <code>Behavior</code> 函数来定义一个 <code>behavior</code>，并且像组件一样，<code>behavior</code> 也可以包含 <code>data</code>、<code>methods</code>、生命周期函数等内容。</p><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a><strong>示例：</strong></h3><p>定义一个 <code>behavior</code>，包含共享的数据和方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">javascript复制代码// 定义一个 behavior，放在 behaviors 文件夹下</span><br><span class="line">module.exports = Behavior(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    sharedData: &#x27;这是共享的数据&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    sharedMethod() &#123;</span><br><span class="line">      console.log(&#x27;这是共享的方法&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  lifetimes: &#123;</span><br><span class="line">    attached() &#123;</span><br><span class="line">      console.log(&#x27;组件被附加时调用（behavior 内的生命周期函数）&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>使用这个 <code>behavior</code> 在某个组件中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">javascript复制代码// 在组件中引入 behavior</span><br><span class="line">const myBehavior = require(&#x27;/behaviors/myBehavior.js&#x27;);</span><br><span class="line"></span><br><span class="line">Component(&#123;</span><br><span class="line">  behaviors: [myBehavior],</span><br><span class="line">  data: &#123;</span><br><span class="line">    localData: &#x27;这是组件自身的数据&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    localMethod() &#123;</span><br><span class="line">      console.log(&#x27;这是组件自身的方法&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在这个例子中，<code>myBehavior</code> 定义了 <code>sharedData</code> 和 <code>sharedMethod</code>，并且在组件中可以直接使用这些共享的内容。</p><h3 id="解析："><a href="#解析：" class="headerlink" title="解析："></a><strong>解析：</strong></h3><ul><li><code>behavior</code> 中的 <code>data</code> 和 <code>methods</code> 会被合并到使用它的组件中，组件可以直接使用这些属性和方法。</li><li><code>behavior</code> 的生命周期函数（如 <code>attached</code>）也会与组件的生命周期函数一起工作。</li></ul><h3 id="2-多-behaviors-的使用"><a href="#2-多-behaviors-的使用" class="headerlink" title="2. 多 behaviors 的使用"></a><strong>2. 多 <code>behaviors</code> 的使用</strong></h3><p>组件中可以混入多个 <code>behaviors</code>，这些 <code>behaviors</code> 会按照从左到右的顺序进行合并。</p><h3 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a><strong>示例：</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">javascript复制代码const behaviorA = require(&#x27;/behaviors/behaviorA.js&#x27;);</span><br><span class="line">const behaviorB = require(&#x27;/behaviors/behaviorB.js&#x27;);</span><br><span class="line"></span><br><span class="line">Component(&#123;</span><br><span class="line">  behaviors: [behaviorA, behaviorB],</span><br><span class="line">  data: &#123;</span><br><span class="line">    componentData: &#x27;组件数据&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h3><ul><li>如果多个 <code>behavior</code> 中定义了相同的 <code>data</code> 字段或方法，后定义的 <code>behavior</code> 会覆盖之前的内容（从左到右合并）。</li><li>如果 <code>behavior</code> 和组件本身定义了相同的 <code>data</code> 字段或方法，组件本身的内容会覆盖 <code>behavior</code> 中的内容。</li></ul><h3 id="3-behavior-中的生命周期"><a href="#3-behavior-中的生命周期" class="headerlink" title="3. behavior 中的生命周期"></a><strong>3. <code>behavior</code> 中的生命周期</strong></h3><p><code>behavior</code> 和组件的生命周期函数是可以同时存在的。如果 <code>behavior</code> 和组件都定义了相同的生命周期函数，那么它们会依次执行。</p><h3 id="示例：-2"><a href="#示例：-2" class="headerlink" title="示例："></a><strong>示例：</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">javascript复制代码// 定义一个 behavior，含有生命周期函数</span><br><span class="line">const myBehavior = Behavior(&#123;</span><br><span class="line">  lifetimes: &#123;</span><br><span class="line">    attached() &#123;</span><br><span class="line">      console.log(&#x27;behavior 的 attached&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Component(&#123;</span><br><span class="line">  behaviors: [myBehavior],</span><br><span class="line">  lifetimes: &#123;</span><br><span class="line">    attached() &#123;</span><br><span class="line">      console.log(&#x27;组件的 attached&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="输出结果："><a href="#输出结果：" class="headerlink" title="输出结果："></a><strong>输出结果：</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arduino复制代码behavior 的 attached</span><br><span class="line">组件的 attached</span><br></pre></td></tr></table></figure><h3 id="解析：-1"><a href="#解析：-1" class="headerlink" title="解析："></a><strong>解析：</strong></h3><ul><li>先执行 <code>behavior</code> 中的 <code>attached</code>，再执行组件中的 <code>attached</code>。</li><li>如果在 <code>behavior</code> 和组件中定义了相同的生命周期函数，它们都会被依次调用。</li></ul><h3 id="4-behaviors-与组件属性的合并规则"><a href="#4-behaviors-与组件属性的合并规则" class="headerlink" title="4. behaviors 与组件属性的合并规则"></a><strong>4. <code>behaviors</code> 与组件属性的合并规则</strong></h3><ul><li><strong><code>data</code> 合并</strong>：<code>behavior</code> 和组件的 <code>data</code> 会合并成一个对象。如果有相同的字段名，组件的字段会覆盖 <code>behavior</code> 的字段。</li><li><strong><code>methods</code> 合并</strong>：<code>behavior</code> 和组件的 <code>methods</code> 会合并在一起，如果同名，组件的方法会覆盖 <code>behavior</code> 的方法。</li><li><strong><code>lifetimes</code> 合并</strong>：<code>behavior</code> 和组件的生命周期方法会依次调用，不会互相覆盖。</li></ul><h3 id="5-behavior-的应用场景"><a href="#5-behavior-的应用场景" class="headerlink" title="5. behavior 的应用场景"></a><strong>5. <code>behavior</code> 的应用场景</strong></h3><p><code>behaviors</code> 通常用于以下场景：</p><ul><li><strong>组件复用</strong>：当多个组件有相似的功能时，可以将公共的代码抽离出来放到 <code>behavior</code> 中，减少重复代码。</li><li><strong>数据共享</strong>：<code>behavior</code> 可以用于组件之间共享某些公共的数据或方法。</li><li><strong>生命周期逻辑复用</strong>：如果多个组件有相同的生命周期逻辑，可以通过 <code>behavior</code> 来统一管理。</li></ul><h3 id="6-示例：计数器-behavior"><a href="#6-示例：计数器-behavior" class="headerlink" title="6. 示例：计数器 behavior"></a><strong>6. 示例：计数器 <code>behavior</code></strong></h3><p>定义一个可以用于多个组件的计数器 <code>behavior</code>，包括计数器数据和增加计数的功能。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">javascript复制代码// behaviors/counter.js</span><br><span class="line">module.exports = Behavior(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    count: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    increaseCount() &#123;</span><br><span class="line">      this.setData(&#123;</span><br><span class="line">        count: this.data.count + 1</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在两个不同的组件中使用这个 <code>behavior</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">javascript复制代码// componentA.js</span><br><span class="line">const counterBehavior = require(&#x27;/behaviors/counter.js&#x27;);</span><br><span class="line"></span><br><span class="line">Component(&#123;</span><br><span class="line">  behaviors: [counterBehavior],</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleTap() &#123;</span><br><span class="line">      this.increaseCount();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">javascript复制代码// componentB.js</span><br><span class="line">const counterBehavior = require(&#x27;/behaviors/counter.js&#x27;);</span><br><span class="line"></span><br><span class="line">Component(&#123;</span><br><span class="line">  behaviors: [counterBehavior],</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleButtonClick() &#123;</span><br><span class="line">      this.increaseCount();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这样，<code>componentA</code> 和 <code>componentB</code> 都拥有了计数功能，而无需重复代码。</p><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><p><code>behaviors</code> 是微信小程序中提供的一种复用代码的方式，可以将数据、方法、生命周期等共享逻辑抽离出来，实现组件之间的逻辑复用。通过 <code>behaviors</code>，可以让组件的开发更加模块化、简洁化，提高代码的复用性和维护性。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序中bindtap和bindsync区别</title>
      <link href="/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%ADbindtap%E5%92%8Cbindsync%E5%8C%BA%E5%88%AB/"/>
      <url>/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%ADbindtap%E5%92%8Cbindsync%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="bindtap和bindsync区别"><a href="#bindtap和bindsync区别" class="headerlink" title="bindtap和bindsync区别"></a><strong>bindtap和bindsync区别</strong></h1><p>在小程序开发中，<code>bindsync</code> 和 <code>bindtap</code> 是两种常用的事件绑定方式，它们的用途和行为略有不同：</p><h3 id="1-bindtap"><a href="#1-bindtap" class="headerlink" title="1. bindtap"></a><strong>1. <code>bindtap</code></strong></h3><p><code>bindtap</code> 是用来监听用户的点击（或触摸）事件，等同于点击事件处理器。它用于捕捉用户的点击操作，并执行相应的回调函数。</p><h3 id="特点："><a href="#特点：" class="headerlink" title="特点："></a><strong>特点：</strong></h3><ul><li><code>bindtap</code> 是绑定点击事件的事件处理器。</li><li>点击元素时会触发这个事件，执行相应的逻辑。</li><li>常用于按钮、图片、文字等点击交互场景。</li></ul><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a><strong>示例：</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line"></span><br><span class="line">复制代码</span><br><span class="line">&lt;view bindtap=&quot;handleTap&quot;&gt;点击我&lt;/view&gt;</span><br><span class="line">javascript复制代码Page(&#123;</span><br><span class="line">  handleTap() &#123;</span><br><span class="line">    console.log(&#x27;你点击了这个元素&#x27;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="解析："><a href="#解析：" class="headerlink" title="解析："></a><strong>解析：</strong></h3><ul><li>当用户点击 <code>&lt;view&gt;</code> 元素时，<code>handleTap</code> 函数将被触发，打印出相应的内容。</li></ul><h3 id="捕获和冒泡："><a href="#捕获和冒泡：" class="headerlink" title="捕获和冒泡："></a><strong>捕获和冒泡：</strong></h3><ul><li><code>bindtap</code> 默认支持事件冒泡，也就是说，子元素的点击事件会向上冒泡到父元素。</li><li>如果不希望事件冒泡，可以使用 <code>catchtap</code>。</li></ul><hr><h3 id="2-bindsync"><a href="#2-bindsync" class="headerlink" title="2. bindsync"></a><strong>2. <code>bindsync</code></strong></h3><p><code>bindsync</code> 是专门用于 <strong>双向绑定</strong> 的属性，通常用于表单组件中，实现数据的实时同步更新。</p><h3 id="特点：-1"><a href="#特点：-1" class="headerlink" title="特点："></a><strong>特点：</strong></h3><ul><li><code>bindsync</code> 是用于数据的双向绑定，能够实时同步用户输入和数据模型。</li><li>当用户在表单控件中输入或修改值时，数据会自动同步到绑定的数据源。</li><li>常见于表单组件，如 <code>&lt;input&gt;</code>, <code>&lt;textarea&gt;</code> 等。</li></ul><h3 id="示例：-1"><a href="#示例：-1" class="headerlink" title="示例："></a><strong>示例：</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">html</span><br><span class="line"></span><br><span class="line">复制代码</span><br><span class="line">&lt;input bindinput=&quot;onInputChange&quot; bindsync=&quot;value&quot; /&gt;</span><br><span class="line">javascript复制代码Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    value: &#x27;&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  onInputChange(e) &#123;</span><br><span class="line">    console.log(&#x27;当前输入框的值为：&#x27;, e.detail.value);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="解析：-1"><a href="#解析：-1" class="headerlink" title="解析："></a><strong>解析：</strong></h3><ul><li>用户在输入框中输入时，<code>value</code> 会与输入框的内容实时同步，且可以通过双向绑定的机制实时获取或更新数据。</li><li><code>bindsync</code> 使得在复杂表单中，数据与视图的绑定更加方便。</li></ul><hr><h3 id="3-区别总结"><a href="#3-区别总结" class="headerlink" title="3. 区别总结"></a><strong>3. 区别总结</strong></h3><ul><li>**<code>bindtap</code>**：是用于 <strong>单向绑定</strong> 点击事件的事件处理器。当用户点击某个元素时，触发回调逻辑。</li><li>**<code>bindsync</code>**：是用于 <strong>双向绑定</strong> 表单数据的绑定方式，可以实时同步数据源和视图的输入内容。</li></ul><h3 id="常见使用场景："><a href="#常见使用场景：" class="headerlink" title="常见使用场景："></a><strong>常见使用场景：</strong></h3><ul><li>**<code>bindtap</code>**：用户点击按钮、图片、文本时触发的操作（如导航、提交等）。</li><li>**<code>bindsync</code>**：表单中使用，保持数据的实时更新，例如输入框内容和页面数据保持同步。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序中pureDataPattern优化设置</title>
      <link href="/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%ADpureDataPattern%E4%BC%98%E5%8C%96%E8%AE%BE%E7%BD%AE/"/>
      <url>/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%ADpureDataPattern%E4%BC%98%E5%8C%96%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="pureDataPattern优化设置"><a href="#pureDataPattern优化设置" class="headerlink" title="pureDataPattern优化设置"></a><strong><code>pureDataPattern</code>优化设置</strong></h1><h1 id="pureDataPattern"><a href="#pureDataPattern" class="headerlink" title="pureDataPattern"></a><strong><code>pureDataPattern</code></strong></h1><p><code>pureDataPattern</code> 是微信小程序的一项优化设置，旨在提高页面性能，特别是在数据频繁更新时。如果页面的数据变化不涉及与渲染相关的逻辑（例如更新纯粹的业务数据而不是视图），可以通过配置 <code>pureDataPattern</code> 来告知小程序引擎哪些数据不需要参与视图层的 diff（对比计算）。</p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a><strong>作用</strong></h3><p>通过 <code>pureDataPattern</code>，开发者可以声明某些数据字段为“纯数据”，这些字段的更新不会触发视图层的渲染过程，避免了不必要的性能开销。它主要用于减少数据变化导致的性能损耗，从而优化页面性能。</p><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a><strong>使用场景</strong></h3><p>当某些数据是纯业务逻辑数据，更新时不影响页面视图渲染时，可以使用 <code>pureDataPattern</code>。例如，统计数据、缓存数据、后台任务中的状态等。</p><h3 id="如何配置"><a href="#如何配置" class="headerlink" title="如何配置"></a><strong>如何配置</strong></h3><p><code>pureDataPattern</code> 是通过在小程序的 <code>app.json</code>、<code>page.json</code> 或者 <code>component.json</code> 文件中配置的，通常针对页面或组件。</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a><strong>示例</strong></h3><p>以下是一个简单的 <code>page.json</code> 配置示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">json复制代码&#123;</span><br><span class="line">  &quot;usingComponents&quot;: &#123;&#125;,</span><br><span class="line">  &quot;pureDataPattern&quot;: &quot;^_&quot;  // 表示以 _ 开头的数据字段为纯数据</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在此配置中，<code>pureDataPattern</code> 表示所有以 <code>_</code> 开头的数据字段会被认为是纯数据，不会影响视图渲染。</p><h3 id="规则说明"><a href="#规则说明" class="headerlink" title="规则说明"></a><strong>规则说明</strong></h3><ul><li><code>pureDataPattern</code> 是一个正则表达式，用于匹配那些不参与视图渲染的数据字段。</li><li>当符合正则表达式的字段发生变化时，视图层将忽略这些字段的更新，从而避免视图层不必要的性能开销。</li></ul><h3 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a><strong>配置示例</strong></h3><p>如果我们在一个小程序页面的 <code>data</code> 中声明了以下数据：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">javascript复制代码Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    _somePrivateData: 123,  // 不需要视图更新的数据</span><br><span class="line">    visibleData: &#x27;This is visible&#x27;  // 会影响视图的数据</span><br><span class="line">  &#125;,</span><br><span class="line">  // 数据更新时，只有 visibleData 会触发视图更新</span><br><span class="line">  updateData() &#123;</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      _somePrivateData: Math.random(),</span><br><span class="line">      visibleData: &#x27;Updated visible data&#x27;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>通过配置 <code>pureDataPattern</code>，像 <code>_somePrivateData</code> 这样以 <code>_</code> 开头的数据更新时不会引起视图的重新渲染，而 <code>visibleData</code> 的更新会触发视图更新。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h3><ul><li>纯数据字段的更新不会影响视图的重渲染，但如果需要该数据在视图中显示，必须确保它不符合 <code>pureDataPattern</code> 的规则。</li><li>使用 <code>pureDataPattern</code> 仅适用于特定场景，过度使用可能导致预期之外的行为，因为视图层无法感知到这些数据的变化。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><p><code>pureDataPattern</code> 是微信小程序的一项性能优化机制，用于声明不影响视图渲染的纯数据字段。合理使用可以减少不必要的视图更新，从而提升性能，尤其在处理频繁的数据变化时非常有用。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序页面切换的本质</title>
      <link href="/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%88%87%E6%8D%A2%E7%9A%84%E6%9C%AC%E8%B4%A8/"/>
      <url>/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B5%E9%9D%A2%E5%88%87%E6%8D%A2%E7%9A%84%E6%9C%AC%E8%B4%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序页面切换本质"><a href="#小程序页面切换本质" class="headerlink" title="小程序页面切换本质"></a><strong>小程序页面切换本质</strong></h1><p>在微信小程序中，页面切换的本质可以归结为 <strong>页面栈的管理</strong> 和 <strong>视图的重新渲染</strong>。微信小程序通过一个栈来管理用户的页面跳转，当用户在不同页面之间切换时，小程序会将每个页面的路由推入或弹出页面栈，从而实现页面切换。具体分为以下几个方面：</p><h2 id="1-页面栈管理"><a href="#1-页面栈管理" class="headerlink" title="1. 页面栈管理"></a><strong>1. 页面栈管理</strong></h2><p>小程序在内存中维护了一个页面栈来管理当前活动的页面和之前访问过的页面。页面栈可以理解为一个数据结构，其中栈底是最先加载的页面，栈顶是当前活动的页面。</p><h3 id="a-push-新页面到页面栈"><a href="#a-push-新页面到页面栈" class="headerlink" title="a. push 新页面到页面栈"></a><strong>a. push 新页面到页面栈</strong></h3><p>当用户从一个页面导航到另一个页面时（如通过 <code>wx.navigateTo</code>），新的页面会被推入到页面栈的顶部。旧页面仍然保留在栈中，等待用户返回时恢复。</p><h3 id="b-pop-出页面"><a href="#b-pop-出页面" class="headerlink" title="b. pop 出页面"></a><strong>b. pop 出页面</strong></h3><p>当用户通过 <code>wx.navigateBack</code> 返回上一个页面时，当前页面会从栈顶弹出，被销毁，之前的页面成为新的栈顶并重新渲染。</p><h3 id="c-replace-当前页面"><a href="#c-replace-当前页面" class="headerlink" title="c. replace 当前页面"></a><strong>c. replace 当前页面</strong></h3><p>通过 <code>wx.redirectTo</code>，当前页面会被替换，新的页面不会被推入页面栈，而是替换当前页面，这时页面栈的大小保持不变。</p><h3 id="d-重设页面栈"><a href="#d-重设页面栈" class="headerlink" title="d. 重设页面栈"></a><strong>d. 重设页面栈</strong></h3><p>通过 <code>wx.reLaunch</code>，可以清空页面栈并加载一个新的页面，这常用于重置应用或重新启动页面流程。</p><h2 id="2-页面栈管理API"><a href="#2-页面栈管理API" class="headerlink" title="2. 页面栈管理API"></a><strong>2. 页面栈管理API</strong></h2><ul><li>**<code>wx.navigateTo</code>**：在当前页面栈中打开一个新页面，保留当前页面。当栈中页面超过 10 个时，会自动销毁最早的页面。</li><li>**<code>wx.redirectTo</code>**：关闭当前页面，跳转到应用内的某个页面，不会产生页面栈推入操作。</li><li>**<code>wx.switchTab</code>**：切换到 tabBar 页面，关闭其他非 tabBar 页面。</li><li>**<code>wx.navigateBack</code>**：关闭当前页面，返回上一个页面或多级页面。</li><li>**<code>wx.reLaunch</code>**：关闭所有页面，打开一个新的页面，页面栈被完全重置。</li></ul><h2 id="3-视图的重新渲染"><a href="#3-视图的重新渲染" class="headerlink" title="3. 视图的重新渲染"></a><strong>3. 视图的重新渲染</strong></h2><p>每次页面切换时，新的页面加载并渲染，而旧页面在切换后可能被销毁或保留在内存中。</p><h3 id="a-生命周期函数"><a href="#a-生命周期函数" class="headerlink" title="a. 生命周期函数"></a><strong>a. 生命周期函数</strong></h3><p>小程序页面切换过程中，页面的生命周期函数会被触发，开发者可以在这些生命周期钩子中处理逻辑：</p><ul><li>**<code>onLoad</code>**：页面加载时调用，仅在页面首次加载时触发。</li><li>**<code>onShow</code>**：页面显示时调用，每次切换到该页面时触发。</li><li>**<code>onHide</code>**：页面隐藏时调用，如跳转到其他页面时会触发。</li><li>**<code>onUnload</code>**：页面卸载时调用，如页面被从页面栈中移除时触发。</li></ul><h3 id="b-缓存与销毁"><a href="#b-缓存与销毁" class="headerlink" title="b. 缓存与销毁"></a><strong>b. 缓存与销毁</strong></h3><p>如果页面栈中的页面没有被销毁，当用户返回该页面时，只会触发 <code>onShow</code>，而不会重新加载整个页面。这意味着页面的状态在页面栈中的保留时间取决于页面是否被销毁。</p><h2 id="4-性能考虑"><a href="#4-性能考虑" class="headerlink" title="4. 性能考虑"></a><strong>4. 性能考虑</strong></h2><p>微信小程序会对页面栈的数量进行限制（最多10个页面），以避免占用过多内存。当页面栈中的页面数量超过限制时，最早的页面会被销毁。因此，页面切换的本质不仅是栈的管理，还有内存和性能优化的考虑。</p><h2 id="5-与传统-Web-页面切换的区别"><a href="#5-与传统-Web-页面切换的区别" class="headerlink" title="5. 与传统 Web 页面切换的区别"></a><strong>5. 与传统 Web 页面切换的区别</strong></h2><p>与传统 Web 页面切换不同，微信小程序的页面切换并不会刷新整个应用程序，而是通过维护页面栈和局部更新视图来实现。这种模式使得页面切换更加轻量，不需要重新加载整个应用，提升了小程序的性能和用户体验。</p><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>微信小程序页面切换的本质是通过 <strong>页面栈的管理</strong> 来完成的。不同的跳转方式（如 <code>navigateTo</code>、<code>redirectTo</code>、<code>reLaunch</code>）影响页面栈的行为，从而影响页面的加载与卸载。同时，页面的生命周期钩子提供了对页面状态的管理方式，确保视图在切换时得到适当的渲染和更新。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序的三大API</title>
      <link href="/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%B8%89%E5%A4%A7API/"/>
      <url>/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%B8%89%E5%A4%A7API/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序3大API"><a href="#小程序3大API" class="headerlink" title="小程序3大API"></a>小程序3大API</h1><p>微信小程序提供了三大类 API，涵盖了各种功能，帮助开发者实现业务需求。具体如下：</p><h3 id="1-界面-API（UI-APIs）"><a href="#1-界面-API（UI-APIs）" class="headerlink" title="1. 界面 API（UI APIs）"></a>1. <strong>界面 API（UI APIs）</strong></h3><p>这些 API 主要用于控制小程序的界面行为和视觉效果，如导航、交互反馈、菜单控制等。</p><p><strong>常用的界面 API 包括：</strong></p><ul><li><strong>导航栏相关</strong><ul><li><code>wx.setNavigationBarTitle</code>：设置当前页面的标题。</li><li><code>wx.setNavigationBarColor</code>：设置导航栏颜色。</li></ul></li><li><strong>界面交互</strong><ul><li><code>wx.showToast</code>：显示提示框，短暂提示用户某个操作成功或失败。</li><li><code>wx.showLoading</code>：显示加载中的提示框，常用于异步请求时提示用户等待。</li><li><code>wx.hideLoading</code>：隐藏 <code>wx.showLoading</code> 触发的加载框。</li><li><code>wx.showModal</code>：显示模态弹窗，提示用户确认或取消某个操作。</li><li><code>wx.showActionSheet</code>：显示操作菜单，允许用户从多个选项中选择。</li></ul></li><li><strong>导航控制</strong><ul><li><code>wx.navigateTo</code>：跳转到新页面，保留当前页面。</li><li><code>wx.redirectTo</code>：跳转到新页面，关闭当前页面。</li><li><code>wx.switchTab</code>：跳转到指定的 Tab 页面。</li><li><code>wx.navigateBack</code>：返回上一个页面，支持返回多级页面。</li><li><code>wx.reLaunch</code>：关闭所有页面并打开到指定页面。</li></ul></li><li><strong>下拉刷新</strong><ul><li><code>wx.startPullDownRefresh</code>：主动触发页面下拉刷新效果。</li><li><code>wx.stopPullDownRefresh</code>：停止当前页面的下拉刷新效果。</li></ul></li><li><strong>背景及菜单</strong><ul><li><code>wx.setBackgroundColor</code>：设置页面的背景颜色。</li><li><code>wx.setBackgroundTextStyle</code>：设置下拉刷新背景文字样式。</li><li><code>wx.showShareMenu</code>：显示分享按钮。</li><li><code>wx.hideShareMenu</code>：隐藏分享按钮。</li></ul></li></ul><p><strong>示例代码：</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">javascript</span><br><span class="line">复制代码</span><br><span class="line">wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&#x27;操作成功&#x27;</span>,</span><br><span class="line">  <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">  <span class="attr">duration</span>: <span class="number">2000</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-数据-API（Data-APIs）"><a href="#2-数据-API（Data-APIs）" class="headerlink" title="2. 数据 API（Data APIs）"></a>2. <strong>数据 API（Data APIs）</strong></h3><p>数据 API 涵盖了获取和存储数据的功能，主要用于与后端服务器通信、缓存数据、本地存储等。</p><p><strong>常用的数据 API 包括：</strong></p><ul><li><strong>网络请求</strong><ul><li><code>wx.request</code>：发送 HTTP 请求，支持 GET、POST 等方法。</li><li><code>wx.uploadFile</code>：将本地文件上传到服务器。</li><li><code>wx.downloadFile</code>：从服务器下载文件。</li></ul></li><li><strong>WebSocket</strong><ul><li><code>wx.connectSocket</code>：创建 WebSocket 连接，用于实时通讯。</li><li><code>wx.onSocketOpen</code>：监听 WebSocket 连接打开事件。</li><li><code>wx.sendSocketMessage</code>：通过 WebSocket 发送消息。</li><li><code>wx.closeSocket</code>：关闭 WebSocket 连接。</li></ul></li><li><strong>文件系统</strong><ul><li><code>wx.getFileSystemManager</code>：获取文件系统管理器，用于管理文件读写操作。</li><li><code>wx.saveFile</code>：将文件保存到本地。</li><li><code>wx.getSavedFileList</code>：获取本地已保存的文件列表。</li></ul></li><li><strong>本地存储</strong><ul><li><code>wx.setStorageSync</code>：同步设置本地存储的数据。</li><li><code>wx.getStorageSync</code>：同步获取本地存储的数据。</li><li><code>wx.clearStorageSync</code>：清空本地存储的所有数据。</li></ul></li><li><strong>数据库</strong><ul><li>小程序还支持云开发，利用云数据库进行数据存储和查询。</li><li><code>wx.cloud.database</code>：获取云数据库的引用。</li><li><code>db.collection()</code>：获取云数据库中的集合。</li><li><code>collection.add()</code>：向集合中添加数据。</li><li><code>collection.get()</code>：从集合中查询数据。</li></ul></li></ul><p><strong>示例代码：</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">javascript</span><br><span class="line">复制代码</span><br><span class="line">wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;https://api.example.com/data&#x27;</span>,</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">  <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">fail</span>(<span class="params">err</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-设备-API（Device-APIs）"><a href="#3-设备-API（Device-APIs）" class="headerlink" title="3. 设备 API（Device APIs）"></a>3. <strong>设备 API（Device APIs）</strong></h3><p>设备 API 提供了与用户设备交互的功能，如系统信息、网络状态、蓝牙、Wi-Fi 等操作。</p><p><strong>常用的设备 API 包括：</strong></p><ul><li><strong>系统信息</strong><ul><li><code>wx.getSystemInfo</code>：获取设备系统信息，如屏幕尺寸、操作系统、微信版本等。</li><li><code>wx.getSystemInfoSync</code>：同步获取系统信息。</li></ul></li><li><strong>网络状态</strong><ul><li><code>wx.getNetworkType</code>：获取设备的网络类型（如 Wi-Fi、2G、3G、4G）。</li><li><code>wx.onNetworkStatusChange</code>：监听网络状态变化事件。</li></ul></li><li><strong>位置</strong><ul><li><code>wx.getLocation</code>：获取用户的当前位置，经纬度、速度等信息。</li><li><code>wx.chooseLocation</code>：打开地图选择位置。</li><li><code>wx.openLocation</code>：使用内置地图打开指定的地理位置。</li></ul></li><li><strong>蓝牙</strong><ul><li><code>wx.openBluetoothAdapter</code>：初始化蓝牙模块。</li><li><code>wx.startBluetoothDevicesDiscovery</code>：开始搜索附近的蓝牙设备。</li><li><code>wx.connectBLEDevice</code>：连接低功耗蓝牙设备。</li></ul></li><li><strong>Wi-Fi</strong><ul><li><code>wx.startWifi</code>：初始化 Wi-Fi 模块。</li><li><code>wx.getConnectedWifi</code>：获取当前连接的 Wi-Fi 信息。</li></ul></li><li><strong>电量</strong><ul><li><code>wx.getBatteryInfo</code>：获取设备电量信息。</li><li><code>wx.onBatteryInfoChange</code>：监听电量变化。</li></ul></li><li><strong>震动</strong><ul><li><code>wx.vibrateLong</code>：使手机发生长震动。</li><li><code>wx.vibrateShort</code>：使手机发生短震动。</li></ul></li><li><strong>扫码</strong><ul><li><code>wx.scanCode</code>：调用相机扫码功能，支持二维码和条形码。</li></ul></li></ul><p><strong>示例代码：</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">javascript</span><br><span class="line">复制代码</span><br><span class="line">wx.<span class="title function_">getSystemInfo</span>(&#123;</span><br><span class="line">  <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">model</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">pixelRatio</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">windowWidth</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">windowHeight</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>微信小程序的三大类 API 提供了从界面控制、数据交互到设备访问的广泛功能支持。通过灵活运用这些 API，开发者可以实现小程序的各种功能，如页面导航、网络请求、系统状态获取等，构建功能强大且体验流畅的小程序应用。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序的九大组件</title>
      <link href="/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%B9%9D%E5%A4%A7%E7%BB%84%E4%BB%B6/"/>
      <url>/2024/10/30/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%B9%9D%E5%A4%A7%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="官方定义的九大组件"><a href="#官方定义的九大组件" class="headerlink" title="官方定义的九大组件"></a>官方定义的九大组件</h1><p>微信小程序提供了丰富的基础组件，官方定义了九大类基础组件，帮助开发者快速构建功能丰富的用户界面。下面是这些组件的详细介绍：</p><h3 id="1-视图容器类组件（View-Components）"><a href="#1-视图容器类组件（View-Components）" class="headerlink" title="1. 视图容器类组件（View Components）"></a>1. <strong>视图容器类组件（View Components）</strong></h3><ul><li><strong>view</strong>：容器组件，类似于 HTML 中的 <code>&lt;div&gt;</code>，用于承载其他组件。<ul><li>属性：<code>hover-class</code>（点击时的样式）、<code>hover-stop-propagation</code>（阻止点击冒泡）等。</li><li>用途：布局和排版。</li></ul></li><li><strong>scroll-view</strong>：可滚动的视图区域，支持横向或纵向滚动。<ul><li>属性：<code>scroll-x</code>、<code>scroll-y</code> 控制滚动方向。</li><li>用途：实现长列表、图片滑动等功能。</li></ul></li><li><strong>swiper</strong>：滑块视图容器，允许在多个子元素之间滑动。<ul><li>属性：<code>autoplay</code>（自动播放）、<code>interval</code>（播放间隔）、<code>circular</code>（循环播放）。</li><li>用途：实现轮播图或幻灯片效果。</li></ul></li><li><strong>movable-view</strong> &amp; <strong>movable-area</strong>：用于创建可移动的视图组件，支持拖拽。<ul><li>用途：实现可拖拽的元素，例如地图上的标记或自定义拖动控件。</li></ul></li><li><strong>cover-view</strong> &amp; <strong>cover-image</strong>：用于在 <code>map</code> 或 <code>video</code> 等原生组件上覆盖自定义视图或图片。<ul><li>用途：在原生组件上叠加自定义内容。</li></ul></li></ul><h3 id="2-基础内容类组件（Basic-Content-Components）"><a href="#2-基础内容类组件（Basic-Content-Components）" class="headerlink" title="2. 基础内容类组件（Basic Content Components）"></a>2. <strong>基础内容类组件（Basic Content Components）</strong></h3><ul><li><strong>text</strong>：用于显示文本内容。<ul><li>属性：<code>selectable</code>（文本是否可选）。</li><li>用途：显示普通文字，支持文本样式设置。</li></ul></li><li><strong>rich-text</strong>：富文本解析组件，支持解析 HTML 标签。<ul><li>属性：<code>nodes</code>（要渲染的 HTML 结构）。</li><li>用途：显示复杂的富文本内容。</li></ul></li><li><strong>icon</strong>：图标组件，提供了一系列内置图标。<ul><li>属性：<code>type</code>（图标类型）、<code>size</code>（图标大小）、<code>color</code>（图标颜色）。</li><li>用途：常用于表示操作按钮或状态图标。</li></ul></li></ul><h3 id="3-表单类组件（Form-Components）"><a href="#3-表单类组件（Form-Components）" class="headerlink" title="3. 表单类组件（Form Components）"></a>3. <strong>表单类组件（Form Components）</strong></h3><ul><li><strong>button</strong>：按钮组件。<ul><li>属性：<code>type</code>（按钮类型：primary、warn、default）、<code>loading</code>（加载状态）。</li><li>用途：执行某种操作或提交表单。</li></ul></li><li><strong>checkbox</strong>：多选框组件，允许用户进行多项选择。<ul><li>属性：<code>value</code>（值）、<code>checked</code>（是否选中）。</li><li>用途：用户表单的多选操作。</li></ul></li><li><strong>form</strong>：表单容器，用于管理表单数据的提交。<ul><li>属性：<code>report-submit</code>（是否返回 formId）、<code>bindsubmit</code>（表单提交事件）。</li><li>用途：收集用户输入的数据并提交。</li></ul></li><li><strong>input</strong>：输入框组件，用于获取用户的文本输入。<ul><li>属性：<code>type</code>（文本、数字、密码等）、<code>placeholder</code>（占位符）。</li><li>用途：获取单行文本输入。</li></ul></li><li><strong>label</strong>：用于绑定控件的文本标签。<ul><li>用途：点击标签时，关联的表单控件会获得焦点。</li></ul></li><li><strong>picker</strong>：选择器组件，提供时间、日期、普通选择等功能。<ul><li>属性：<code>mode</code>（选择器类型：时间、日期、区域等）、<code>range</code>（数据源）。</li><li>用途：实现下拉选择功能。</li></ul></li><li><strong>radio</strong>：单选框组件，允许用户选择其中一个选项。<ul><li>属性：<code>value</code>（值）、<code>checked</code>（是否选中）。</li><li>用途：用户表单的单选操作。</li></ul></li><li><strong>slider</strong>：滑动选择器，用户可以通过拖动滑块来选择数值。<ul><li>属性：<code>min</code>、<code>max</code>（最小和最大值）、<code>step</code>（步长）。</li><li>用途：调整范围值，例如音量、亮度等。</li></ul></li><li><strong>switch</strong>：开关组件，用户可以切换状态。<ul><li>属性：<code>checked</code>（是否选中）。</li><li>用途：控制开关类操作。</li></ul></li><li><strong>textarea</strong>：多行文本输入框组件，用户可以输入长文本。<ul><li>属性：<code>maxlength</code>（最大长度）、<code>placeholder</code>（占位符）。</li><li>用途：用户输入多行文字。</li></ul></li></ul><h3 id="4-导航类组件（Navigation-Components）"><a href="#4-导航类组件（Navigation-Components）" class="headerlink" title="4. 导航类组件（Navigation Components）"></a>4. <strong>导航类组件（Navigation Components）</strong></h3><ul><li><strong>navigator</strong>：页面跳转组件，类似 HTML 的 <code>&lt;a&gt;</code> 标签，用于跳转到不同的页面。<ul><li>属性：<code>url</code>（目标页面的路径）、<code>open-type</code>（跳转方式）。</li><li>用途：实现页面间的导航。</li></ul></li></ul><h3 id="5-媒体组件（Media-Components）"><a href="#5-媒体组件（Media-Components）" class="headerlink" title="5. 媒体组件（Media Components）"></a>5. <strong>媒体组件（Media Components）</strong></h3><ul><li><strong>audio</strong>：音频播放组件。<ul><li>属性：<code>src</code>（音频文件路径）、<code>loop</code>（是否循环）、<code>controls</code>（是否显示控制栏）。</li><li>用途：用于播放音频文件。</li></ul></li><li><strong>image</strong>：图片组件，支持多种图片格式展示。<ul><li>属性：<code>src</code>（图片路径）、<code>mode</code>（图片裁剪、缩放模式）。</li><li>用途：用于显示图片，支持网络图片和本地图片。</li></ul></li><li><strong>video</strong>：视频播放组件。<ul><li>属性：<code>src</code>（视频文件路径）、<code>controls</code>（是否显示控制栏）、<code>autoplay</code>（自动播放）。</li><li>用途：播放视频内容。</li></ul></li><li><strong>camera</strong>：相机组件，允许用户拍照或录制视频。<ul><li>用途：拍摄照片或视频内容，常用于拍摄功能。</li></ul></li><li><strong>live-player</strong> 和 <strong>live-pusher</strong>：用于直播的推流和播放组件。<ul><li>用途：实现实时音视频推流和播放功能。</li></ul></li></ul><h3 id="6-地图类组件（Map-Components）"><a href="#6-地图类组件（Map-Components）" class="headerlink" title="6. 地图类组件（Map Components）"></a>6. <strong>地图类组件（Map Components）</strong></h3><ul><li><strong>map</strong>：地图组件，显示地图视图，支持标记、定位等功能。<ul><li>属性：<code>latitude</code>（纬度）、<code>longitude</code>（经度）、<code>markers</code>（标记点）。</li><li>用途：实现地理位置展示和标记功能。</li></ul></li></ul><h3 id="7-画布类组件（Canvas-Components）"><a href="#7-画布类组件（Canvas-Components）" class="headerlink" title="7. 画布类组件（Canvas Components）"></a>7. <strong>画布类组件（Canvas Components）</strong></h3><ul><li><strong>canvas</strong>：画布组件，允许在页面上绘制图形。<ul><li>属性：<code>canvas-id</code>（画布 ID）。</li><li>用途：绘制图像、图形，常用于自定义图形绘制。</li></ul></li></ul><h3 id="8-开放能力组件（Open-Capability-Components）"><a href="#8-开放能力组件（Open-Capability-Components）" class="headerlink" title="8. 开放能力组件（Open Capability Components）"></a>8. <strong>开放能力组件（Open Capability Components）</strong></h3><ul><li><strong>open-data</strong>：用于展示微信开放的数据，如昵称、头像等。<ul><li>用途：展示用户的微信信息。</li></ul></li><li><strong>web-view</strong>：用于嵌入网页内容。<ul><li>用途：在小程序内显示网页，支持与 H5 页面交互。</li></ul></li></ul><h3 id="9-导航栏组件（Navigation-Bar-Components）"><a href="#9-导航栏组件（Navigation-Bar-Components）" class="headerlink" title="9. 导航栏组件（Navigation Bar Components）"></a>9. <strong>导航栏组件（Navigation Bar Components）</strong></h3><ul><li><strong>navigation-bar</strong>：用于配置页面的导航栏样式和行为。<ul><li>属性：<code>title</code>（页面标题）、<code>background-color</code>（导航栏背景色）。</li><li>用途：配置页面的顶部导航条。</li></ul></li></ul><hr><p>这些组件涵盖了微信小程序开发中的常见需求，提供了视图、表单、媒体、导航等各种功能，开发者可以根据具体业务场景灵活使用这些组件构建小程序。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件测试web</title>
      <link href="/2024/10/30/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95web/"/>
      <url>/2024/10/30/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95web/</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>代码编辑器：idea</p><p>配置环境</p><p>在<code>xml</code>文件导入依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    Junit5单元测试框架--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.11.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-params<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span> 5.11.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    selenium自动化测试--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.seleniumhq.selenium<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>selenium-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.141.59<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- 请使用最新的版本号 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    文件操作工具--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- 请使用最新的版本号 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h1><p>查看谷歌浏览器版本，下载对应版本的驱动（版本不必配会打不开浏览器）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line"><span class="comment">//系统打开对应驱动，后面的引号为驱动在本地对应的位置</span></span><br><span class="line">   System.setProperty(<span class="string">&quot;webdriver.chrome.driver&quot;</span>, <span class="string">&quot;D:\\chromedriver-win64\\chromedriver-win64\\chromedriver.exe&quot;</span>);</span><br><span class="line">        <span class="type">ChromeDriver</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChromeDriver</span>();</span><br><span class="line">        <span class="comment">//用谷歌浏览器打开百度</span></span><br><span class="line">        driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="JUnit-单元测试"><a href="#JUnit-单元测试" class="headerlink" title="JUnit 单元测试"></a><strong>JUnit 单元测试</strong></h1><ol><li>**<code>@BeforeEach</code>**：<ul><li>这个注解用于标记在每个测试方法执行之前都要运行的方法。</li><li>通常用于设置测试环境，比如初始化测试数据、启动服务器、打开浏览器等。</li><li>可以有多个方法使用 <code>@BeforeEach</code> 注解，它们将按照定义的顺序执行。</li></ul></li><li>**<code>@AfterEach</code>**：<ul><li>这个注解用于标记在每个测试方法执行之后都要运行的方法。</li><li>通常用于清理测试环境，比如关闭数据库连接、停止服务器、关闭浏览器等。</li><li>也可以有多个方法使用 <code>@AfterEach</code> 注解，它们将按照定义的顺序执行。</li></ul></li><li>**<code>@Test</code>**：<ul><li>这个注解用于标记一个方法为测试方法。</li><li>测试运行器将执行所有标记有 <code>@Test</code> 注解的方法。</li><li>可以为 <code>@Test</code> 注解提供参数，如 <code>@Test(timeout = 100)</code> 来设置测试超时时间。</li></ul></li><li>**<code>@ParameterizedTest</code>**：<ul><li>这个注解用于标记一个参数化测试方法。</li><li>参数化测试允许你为同一个测试方法提供多组输入参数，这样可以在不同的输入条件下执行相同的测试逻辑。</li><li>通常与 <code>@ValueSource</code>、<code>@CsvSource</code>、<code>@MethodSource</code> 等注解一起使用来提供测试数据。</li></ul></li><li>**<code>@CsvSource</code>**：<ul><li><p>这个注解用于为 <code>@ParameterizedTest</code> 提供测试数据。</p></li><li><p>数据以逗号分隔的值（CSV）格式提供，每个条目代表一组参数。</p></li><li><p>例如：<code>@ParameterizedTest @CsvSource(&#123;&quot;value1, value2&quot;, &quot;value3, value4&quot;&#125;)</code>。</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.mooctest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.FileUtils;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.AfterEach;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.BeforeEach;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.params.ParameterizedTest;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.params.provider.CsvSource;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.*;</span><br><span class="line"><span class="keyword">import</span> org.openqa.selenium.chrome.ChromeDriver;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTemplate</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> WebDriver driver;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeEach</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setup</span><span class="params">()</span> &#123;</span><br><span class="line">        System.setProperty(<span class="string">&quot;webdriver.chrome.driver&quot;</span>, <span class="string">&quot;D:\\\\chromedriver-win64\\\\chromedriver-win64\\\\chromedriver.exe&quot;</span>);</span><br><span class="line">        driver = <span class="keyword">new</span> <span class="title class_">ChromeDriver</span>();</span><br><span class="line">        driver.get(<span class="string">&quot;https://www.12306.cn/index/index.html&quot;</span>);</span><br><span class="line">        driver.manage().window().maximize();</span><br><span class="line">        driver.manage().timeouts().implicitlyWait(<span class="number">10</span>, TimeUnit.SECONDS);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请在这里插入JUnit5测试代码</span></span><br><span class="line"><span class="meta">@ParameterizedTest</span></span><br><span class="line"><span class="meta">@CsvSource(&#123;</span></span><br><span class="line"><span class="meta">        &quot;北京北,南京,2024-10-16,12306_search_001.jpg&quot;,</span></span><br><span class="line"><span class="meta">        &quot;北京北,南京,2024-10-24,12306_search_002.jpg&quot;,</span></span><br><span class="line"><span class="meta">        &quot;北京北,南京,2024-10-25,12306_search_003.jpg&quot;,</span></span><br><span class="line"><span class="meta">        &quot;北京北,南京,2024-10-31,12306_search_004.jpg&quot;,</span></span><br><span class="line"><span class="meta">        &quot;北京北,南京,2024-11-08,12306_search_005.jpg&quot;,</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">searchNormal</span><span class="params">(String from,String to,String date,String filename)</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">    <span class="comment">//        输入出发地</span></span><br><span class="line">    <span class="type">WebElement</span> <span class="variable">from_input</span> <span class="operator">=</span> driver.findElement(By.id(<span class="string">&quot;fromStationText&quot;</span>));</span><br><span class="line">    Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">    from_input.clear();<span class="comment">//清空输入框</span></span><br><span class="line">    Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">    from_input.sendKeys(from+Keys.ENTER);</span><br><span class="line">    Thread.sleep(<span class="number">3000</span>);</span><br><span class="line"><span class="comment">//        输入目的地</span></span><br><span class="line">    <span class="type">WebElement</span> <span class="variable">to_input</span> <span class="operator">=</span> driver.findElement(By.id(<span class="string">&quot;toStationText&quot;</span>));</span><br><span class="line">    to_input.clear();</span><br><span class="line">    to_input.sendKeys(to+Keys.ENTER);</span><br><span class="line"><span class="comment">//输入出发日期 合法出发日期下的早于当前日期车票的查询</span></span><br><span class="line">    <span class="type">WebElement</span> <span class="variable">train_date</span> <span class="operator">=</span> driver.findElement(By.id(<span class="string">&quot;train_date&quot;</span>));</span><br><span class="line">    train_date.clear();</span><br><span class="line">    train_date.sendKeys(date);</span><br><span class="line"><span class="comment">//点击查询</span></span><br><span class="line">    driver.findElement(By.id(<span class="string">&quot;search_one&quot;</span>)).click();</span><br><span class="line">    Thread.sleep(<span class="number">2000</span>);</span><br><span class="line"><span class="comment">//        切换标签页</span></span><br><span class="line">    Set&lt;String&gt; windowHandles = driver.getWindowHandles();</span><br><span class="line">    driver.switchTo().window(windowHandles.toArray()[<span class="number">1</span>].toString());</span><br><span class="line"></span><br><span class="line">    takeScreenshot(filename);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterEach</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">teardown</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.driver.quit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">takeScreenshot</span><span class="params">(String fileName)</span> &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">screenshotFile</span> <span class="operator">=</span> ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileUtils.copyFile(screenshotFile, <span class="keyword">new</span> <span class="title class_">File</span>(fileName));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="自动化测试selenium常用函数"><a href="#自动化测试selenium常用函数" class="headerlink" title="自动化测试selenium常用函数"></a><strong>自动化测试selenium常用函数</strong></h1><h2 id="浏览器导航"><a href="#浏览器导航" class="headerlink" title="浏览器导航"></a><strong>浏览器导航</strong></h2><p>• 浏览器的前进、后退、刷新</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">driver.navigate().back();</span><br><span class="line">driver.navigate().forward();</span><br><span class="line">driver.navigate().refresh();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>• 打开网站</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更⻓的⽅法</span></span><br><span class="line"> driver.navigate().to(<span class="string">&quot;https://selenium.dev&quot;</span>);</span><br><span class="line"> <span class="comment">// 简洁的⽅法</span></span><br><span class="line"> driver.get(<span class="string">&quot;https://selenium.dev&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li><p>在页面查找元素，返回值为Element</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">findElement(By);</span><br></pre></td></tr></table></figure></li><li><p>在页面查找元素，返回值为List</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">findElements(By);</span><br></pre></td></tr></table></figure></li><li><p>获取css选择器</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//id选择器</span></span><br><span class="line"><span class="type">WebElement</span> <span class="variable">kw_input</span> <span class="operator">=</span> driver.findElement(By.id(<span class="string">&quot;kw&quot;</span>));</span><br><span class="line"><span class="comment">//类名选择器</span></span><br><span class="line"> <span class="type">WebElement</span> <span class="variable">kw_input</span> <span class="operator">=</span> driver.findElement(By.className(<span class="string">&quot;kw&quot;</span>));</span><br><span class="line"> <span class="comment">//name</span></span><br><span class="line">  <span class="type">WebElement</span> <span class="variable">kw_input</span> <span class="operator">=</span> driver.findElement(By.name(<span class="string">&quot;kw&quot;</span>));</span><br></pre></td></tr></table></figure></li><li><p>xpath </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用xpath获取节点</span></span><br><span class="line">driver.findElement(By.xpath(<span class="string">&quot;/html/body/div[1]/div[3]/div/div/div[2]/div/div[1]/div/div[3]/button&quot;</span>));</span><br><span class="line"><span class="comment">//  XPath使用//选择符来选择当前节点下的所有后代节点，然后找到文本内容为“17”的&lt;strong&gt;标签。</span></span><br><span class="line"> driver.findElement(By.xpath(<span class="string">&quot;/html/body/div[2]/div[2]/div/div/div/div/div[2]/div[1]/div[2]/div[1]/div/div[2]/div[1]/ul[2]//strong[text()=&#x27;17&#x27;]&quot;</span>)).click();</span><br></pre></td></tr></table></figure></li></ul><h2 id="操作测试对象"><a href="#操作测试对象" class="headerlink" title="操作测试对象"></a><strong>操作测试对象</strong></h2><ol><li><p><code>click()</code> 点击&#x2F;提交对象</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//找到百度⼀下按钮并点击</span></span><br><span class="line">driver.findElement(By.cssSelector(<span class="string">&quot;#su&quot;</span>)).click();<span class="comment">//页面绝大多数区域都可以点击，不只是按钮，页面影藏的标签、不可见的标签不能点</span></span><br></pre></td></tr></table></figure></li><li><p><code>sendKeys(&quot;&quot;)</code> 模拟按键输⼊</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.findElement(By.cssSelector(<span class="string">&quot;#kw&quot;</span>)).sendKeys(<span class="string">&quot;输⼊⽂字&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>clear()</code> 清除文本内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">driver.findElement(By.cssSelector(<span class="string">&quot;#kw&quot;</span>)).sendKeys(<span class="string">&quot;我爱游戏&quot;</span>);</span><br><span class="line">driver.findElement(By.cssSelector(<span class="string">&quot;#kw&quot;</span>)).clear();</span><br><span class="line">driver.findElement(By.cssSelector(<span class="string">&quot;#kw&quot;</span>)).sendKeys(<span class="string">&quot;我爱学习&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>getText()</code> 获取文本信息</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">bdtext</span> <span class="operator">=</span> driver.findElement(By.xpath(<span class="string">&quot;//*[@id=&quot;</span>title-content<span class="string">&quot;]/span[1]&quot;</span>)).getText();</span><br><span class="line">System.out.println(<span class="string">&quot;打印的内容是：&quot;</span>+bdtext);</span><br></pre></td></tr></table></figure></li><li><p><code>getTitle()</code> 获取当前页面标题</p></li><li><p><code>getCurrentUrl()</code> 获取当前页面URL</p></li></ol><h2 id="窗口"><a href="#窗口" class="headerlink" title="窗口"></a><strong>窗口</strong></h2><h3 id="切换窗口"><a href="#切换窗口" class="headerlink" title="切换窗口"></a><strong>切换窗口</strong></h3><ul><li><p>获取当前页面句柄：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.getWindowHandle(); <span class="comment">//返回值String</span></span><br></pre></td></tr></table></figure></li><li><p>获取所有页面句柄：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.getWindowHandles();<span class="comment">//返回值Set&lt;Sreing&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>切换当前句柄为最新页面：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">curWindow</span> <span class="operator">=</span> driver.getWindowHandle();</span><br><span class="line">Set&lt;String&gt; allWindow = driver.getWindowHandles();</span><br><span class="line"><span class="keyword">for</span>( String w : allWindow)&#123;</span><br><span class="line"><span class="keyword">if</span>(w!=curWindow)&#123;</span><br><span class="line">driver.switchTo().window(w);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Set&lt;String&gt; windowHandles = driver.getWindowHandles();</span><br><span class="line">    driver.switchTo().window(windowHandles.toArray()[<span class="number">1</span>].toString());</span><br></pre></td></tr></table></figure></li></ul><h3 id="窗口设置大小"><a href="#窗口设置大小" class="headerlink" title="窗口设置大小"></a><strong>窗口设置大小</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//窗⼝最⼤化</span></span><br><span class="line">driver.manage().window().maximize();</span><br><span class="line"><span class="comment">//窗⼝最⼩化</span></span><br><span class="line">driver.manage().window().minimize();</span><br><span class="line"><span class="comment">//全屏窗⼝</span></span><br><span class="line">driver.manage().window().fullscreen();</span><br><span class="line"><span class="comment">//⼿动设置窗⼝⼤⼩</span></span><br><span class="line">driver.manage().window().setSize(<span class="keyword">new</span> <span class="title class_">Dimension</span>(<span class="number">1024</span>, <span class="number">768</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="窗口切换"><a href="#窗口切换" class="headerlink" title="窗口切换"></a><strong>窗口切换</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取所有句柄</span></span><br><span class="line"><span class="comment">//获取当前停留⻚⾯句柄</span></span><br><span class="line"> <span class="type">String</span> <span class="variable">curWindow</span> <span class="operator">=</span> driver.getWindowHandle();</span><br><span class="line"> Set&lt;String&gt; allWindow = driver.getWindowHandles();</span><br><span class="line"> <span class="keyword">for</span>( String w : allWindow)&#123;</span><br><span class="line"> <span class="keyword">if</span>(w!=curWindow)&#123;</span><br><span class="line"> driver.switchTo().window(w);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>自动化一般不会存在打开好多个标签页</p><h3 id="关闭窗口"><a href="#关闭窗口" class="headerlink" title="关闭窗口"></a><strong>关闭窗口</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">driver.close();<span class="comment">//关闭当前标签页</span></span><br><span class="line"> 注意：窗⼝关闭后driver要重新定义</span><br><span class="line">     </span><br><span class="line">driver.quit(); <span class="comment">//关闭浏览器、释放driver对象</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="屏幕截图"><a href="#屏幕截图" class="headerlink" title="屏幕截图"></a>屏幕截图</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">takeScreenshot</span><span class="params">(String fileName)</span> &#123;</span><br><span class="line">       <span class="type">File</span> <span class="variable">screenshotFile</span> <span class="operator">=</span> ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           FileUtils.copyFile(screenshotFile, <span class="keyword">new</span> <span class="title class_">File</span>(fileName));</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>需要的依赖为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span> <span class="comment">&lt;!-- 请使用最新的版本号 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="等待"><a href="#等待" class="headerlink" title="等待"></a><strong>等待</strong></h2><p>假如写自动化代码出现了<code>NoSuchElement</code>错误</p><ul><li>第一步:在报错的代码前添加Thread. sleep(秒),设置的时间长一点</li><li>第二步:执行自动化,在自动化打开的页面里打开前端开发者工具,手动检查元素是否真的不存在</li></ul><ol><li>自动化打开的页面确实不存在该元素<ol><li>手动打开的页面和自动化打开的页面不一样(很可能是登陆和登录状态下页面不一样)</li><li>元素为动态元素</li></ol></li><li>自动化打开的页面确实存在该元素<ul><li>代码执行的速度比页面渲染的速度要快,页面还没渲染出来,程序已经开始找到了,导致元素没有找到解决办法 —- 添加等待</li></ul></li></ol><h3 id="强制等待"><a href="#强制等待" class="headerlink" title="强制等待"></a><strong>强制等待</strong></h3><ul><li><code>Thread.sleep（）</code><ul><li>优点：使用简单，调试的时候比较有效</li><li>缺点：影响运行效率，浪费大量的时间</li></ul></li></ul><h3 id="隐式等待"><a href="#隐式等待" class="headerlink" title="隐式等待"></a><strong>隐式等待</strong></h3><p>隐式等待是⼀种智能等待，他可以规定在查找元素时，在指定时间内不断查找元素。如果找到则代码继续执⾏，直到超时没找到元素才会报错。</p><ul><li><code>implicitlyWait（）</code> 参数：Duration类中提供的毫秒、秒、分钟等方法<ul><li>隐式等待作用域是整个脚本的所有元素</li><li>优点：智能等待，作用于全局</li><li>缺点：只能查找元素、每次查找元素都要等待</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//隐式等待1000毫秒</span></span><br><span class="line">driver.manage().timeouts().implicitlyWait(Duration.ofMillis(<span class="number">1000</span>));</span><br><span class="line"><span class="comment">//隐式等待5秒</span></span><br><span class="line">driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(<span class="number">5</span>));</span><br></pre></td></tr></table></figure><h3 id="显示等待"><a href="#显示等待" class="headerlink" title="显示等待"></a><strong>显示等待</strong></h3><p>显示等待也是⼀种智能等待，在指定超时时间范围内只要满⾜操作的条件就会继续执⾏后续代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">WebDriverWait</span>(driver, Duration.ofSeconds(<span class="number">3</span>)).until($express)</span><br></pre></td></tr></table></figure><ul><li>$press：涉及到<code>selenium.support.ui.ExpectedConditions</code>包下的<code>ExpectedConditions</code>类</li><li>返回值：boolean</li></ul><h3 id="ExpectedConditions预定义方法的一些示例："><a href="#ExpectedConditions预定义方法的一些示例：" class="headerlink" title="ExpectedConditions预定义方法的一些示例："></a><strong><code>ExpectedConditions</code>预定义方法的一些示例：</strong></h3><ul><li><code>elementToBeClickable(By locator)</code> ‒ 用于检查元素的期望是可见的并已启用，以便可以单击。</li><li><code>textToBe(Bylocator，String str)</code> - 检查元素。精确匹配</li><li><code>presenceOfElementLocated(Bylocator)</code> ‒ 检查页⾯的 <code>DOM</code> 上是否存在元素。</li><li><code>urlToBe(java.lang.String url)</code> ‒ 检查当前页面的 URL 是⼀个特定的 URL</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WebDriverWait</span> <span class="variable">wait</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WebDriverWait</span>(driver,Duration.ofSeconds(<span class="number">10</span>));</span><br><span class="line"><span class="number">2</span> <span class="type">boolean</span> <span class="variable">ispass</span> <span class="operator">=</span> wait.until(ExpectedConditions.textToBe(By.cssSelector(<span class="string">&quot;#s-topleft &gt; a:nth-child(1)&quot;</span>), <span class="string">&quot;新闻&quot;</span>));</span><br><span class="line"> <span class="keyword">if</span>(ispass)&#123;</span><br><span class="line"> System.out.println(<span class="string">&quot;测试通过&quot;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"> System.out.println(<span class="string">&quot;测试失败&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>优点：显式等待是智能等待，可以⾃定义显⽰等待的条件，操作灵活</li><li>缺点：写法复杂、<em>只做用在当前条件上</em></li></ul><p><strong>问题：显示等待和隐式等待一起使用会怎么样？</strong></p><p>可能会导致不可预测的等待时间，谨慎使用</p><h2 id="弹窗"><a href="#弹窗" class="headerlink" title="弹窗"></a><strong>弹窗</strong></h2><p><code>弹窗是在⻚⾯是找不到任何元素的，这种情况怎么处理？</code></p><p><code>使⽤selenium提供的Alert接⼝</code></p><h3 id="警告弹窗-确认弹窗"><a href="#警告弹窗-确认弹窗" class="headerlink" title="警告弹窗+确认弹窗"></a><strong>警告弹窗+确认弹窗</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//切换弹窗</span></span><br><span class="line"><span class="type">Alert</span> <span class="variable">alert</span> <span class="operator">=</span> driver.switchTo.alert();</span><br><span class="line"> <span class="comment">//确认</span></span><br><span class="line"> alert.accept()</span><br><span class="line"> <span class="comment">//取消</span></span><br><span class="line"> alert.dismiss()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="提示弹窗"><a href="#提示弹窗" class="headerlink" title="提示弹窗"></a><strong>提示弹窗</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Alert</span> <span class="variable">alert</span> <span class="operator">=</span> driver.switchTo.alert();</span><br><span class="line">alert.sendKeys(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">alert.accept();</span><br><span class="line">alert.dismiss();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a><strong>文件上传</strong></h2><p>点击文件上传的场景下会弹窗系统窗口，进行文件的选择。<code>selenium</code>无法识别非web的控件，上传文件窗口为系统自带，无法识别窗口元素但是可以使用<code>sendkeys</code>来上传指定路径的文件，达到的效果是⼀样的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WebElement</span> <span class="variable">ele</span> <span class="operator">=</span> driver.findElement(By.cssSelector(<span class="string">&quot;body &gt; div &gt; div &gt; </span></span><br><span class="line"><span class="string">input[type=file]&quot;</span>));</span><br><span class="line"> ele.sendKeys(<span class="string">&quot;D:\\selenium2html\\selenium2html\\upload.html&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 软测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/10/29/hello-world/"/>
      <url>/2024/10/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
